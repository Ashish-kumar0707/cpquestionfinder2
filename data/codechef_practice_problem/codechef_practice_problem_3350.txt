
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
Chefland is a country with NN cities (numbered 11 through NN) and MM bidirectional roads (numbered from 11 through MM). Each road connects two different cities and no two different roads connect the same pair of cities.
Bitland declared war on Chefland and after multiple battles, all roads of Chefland have ended up in a very bad state. Moreover, the war is causing psychological damage to the citizens of Chefland — for each valid uu, the non-eagerness of the inhabitants of city uu on day dd is Eu(d)=Pu+Qu⋅dEu(d)=Pu+Qu⋅d.
In Chefland, there are KK special cities that are very important strategically. Ada, the queen of Chefland, decided to repair some roads and construct new roads in such a way that if any one of these roads is destroyed, it is still possible to reach each special city from any other special city using only the roads that were repaired or constructed.
It is allowed to work on repairing and constructing different roads simultaneously, but to keep Chefland stable, Ada ordered that on each day, the number of roads that are being repaired and/or constructed must be at most SS. Also, whenever we start repairing or constructing a road, the work on that road cannot be paused until the road is finished.
The earliest day on which we can start repairing or constructing a road is day 11; let's denote the last day on which we finish repairing or constructing a road by TT. The queen does not want to wait too much, so for each day between 11 and TT inclusive, there must be at least one road which is currently being constructed or repaired. Note that this means TT cannot exceed the time it would take to repair and construct all roads.
For each valid ii, the ii-th of the original roads connected cities UiUi and ViVi, its length was LiLi kilometres and the cost of repairing it is described by two parameters AiAi and BiBi. The workers of Chefland can only repair one kilometer of road per day and it is not allowed to work on different parts of a road at the same time, so it takes exactly LiLi days to repair this road. If we start repairing this road on day dd, it costs Ai+Bi⋅dAi+Bi⋅d.
For each pair of different cities uu and vv, let's denote the length of the shortest path between these cities before the original roads were damaged (before Chefland's invasion) by Du,vDu,v. Then, it takes Du,vDu,v days to construct a brand new road between the cities uu and vv. This road does not pass through any cities other than uu and vv. If we start constructing this road on day dd, it costs (Eu(d)+Ev(d))⋅Du,v(Eu(d)+Ev(d))⋅Du,v. It is not allowed to construct a road between two cities if they are already directly connected by a road or if they were originally directly connected by a road.
Help Ada design a plan that minimises the total cost. Formally, determine which roads should be repaired, which ones should be constructed and for each of these roads, determine the day on which the work on this road should start. The total cost of this plan should be as small as possible, while all other constraints must be satisfied perfectly.
Input

The first line of the input contains four space-separated integers NN, MM, KK and SS.
The second line contains KK space-separated integers denoting the indices of the special cities.
NN lines follow. For each ii (1≤i≤N1≤i≤N), the ii-th of these lines contains two space-separated integers PiPi and QiQi.
MM more lines follow. For each ii (1≤i≤M1≤i≤M), the ii-th of these lines contains five space-separated integers UiUi, ViVi, LiLi, AiAi and BiBi.

Output

First, print a line containing a single integer XX denoting the number of roads you want to repair.
Then, print XX lines. Each of these lines should contain two space-separated integers dd and ee denoting that you want to start repairing road ee on day dd.
Next, print a line containing a single integer YY denoting the number of new roads you want to construct.
Then, print YY lines. Each of these lines should contain three space-separated integers dd, uu and vv denoting that you want to start building a road between cities uu and vv on day dd.

Constraints

2≤K≤N=282≤K≤N=28
24=S≤M≤(N⋅(N−1))/224=S≤M≤(N⋅(N−1))/2
1≤Ui,Vi≤N1≤Ui,Vi≤N for each valid ii
1≤Li≤2121≤Li≤212 for each valid ii
1≤Ai,Bi≤281≤Ai,Bi≤28 for each valid ii
1≤Pi,Qi≤2111≤Pi,Qi≤211 for each valid ii

Example Input
7 9 3 2
1 3 7
1 1
1 2
1 3
1 4
1 5
1 6
1 7
1 2 1 1 1
1 4 1 1 2
2 3 1 1 3
2 4 1 1 4
3 4 1 1 5
3 5 1 1 6
3 6 1 1 7
5 7 1 1 8
6 7 1 1 9

Example Output
8
1 1
2 2
3 3
4 5
5 6
6 7
7 8
8 9
0



Scoring
The score of each test case (and therefore each test file) is the sum of costs of all the roads you want to repair or construct. The score of a submission is the sum of scores of all test files. Your goal is to minimise the score of your submission.
There are sixteen test files. If your program gets a non-AC verdict on any test file, your submission's verdict will be non-AC. In other words, an AC verdict denotes that your program runs successfully on all the test files.
Test Generation
In all test cases, N=28N=28 and S=24S=24.
There are two types of original road networks:

Type I: There is a road between each pair of cities and the special cities are chosen uniformly randomly.
Type II: First, ten permutations p1,p2,…,p10p1,p2,…,p10 of integers 11 through K+K/2K+K/2 (11-indexed) are generated. For each valid ii and jj, the edge between cities pi,jpi,j and pi,j+1pi,j+1 is added if it did not exist. Then, edges are added uniformly randomly until the total number of edges reaches ⌊N⋅(N−1)5⌋⌊N⋅(N−1)5⌋. The special cities are chosen uniformly randomly between 1 and K+K/2K+K/2. After generating the road network, the indices of the cities are relabelled. A permutation qq of numbers from 11 through NN is uniformly randomly chosen, the new index of city uu will be ququ. If in the original network cities uu and vv are connected, in the final network cities ququ and qvqv are connected.

KK is either N/4N/4 or N/2N/2. Next, we choose two parameters MINLMINL and MAXLMAXL: either 11 and 212212 respectively or 211−10211−10 and 211+10211+10 respectively. Next, we choose two more parameters MINAMINA and MAXAMAXA: either 11 and 2828 respectively or 27−2027−20 and 27+2027+20 respectively.
The lengths of all roads are chosen uniformly randomly between MINLMINL and MAXLMAXL inclusive. All parameters AiAi and BiBi are chosen uniformly randomly between MINAMINA and MAXAMAXA inclusive. All parameters PiPi and QiQi are chosen uniformly randomly between 8⋅MINA8⋅MINA and 8⋅MAXA8⋅MAXA inclusive.
There is a test file for each unique combination of the following four parameters: road network type, KK, the pair (MINL,MAXL)(MINL,MAXL) and the pair (MINA,MAXA)(MINA,MAXA).



Author:
7★alei


Tags:

               
                 alei
                 
               
             
             



                        Difficulty Rating:
                    

3603


Date Added:
18-06-2019


Time Limit:
4 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

