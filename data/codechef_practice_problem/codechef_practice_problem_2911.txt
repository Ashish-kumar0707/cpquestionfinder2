
Hacker-man's crew is trying to get into Swiss bank's locker, but in order to do so, hacker-man has to bypass a really tough laser lock.
He can see a square matrix with NN rows and NN columns. Inside it, he sees KK lasers in fixed coordinates. Each laser can be oriented vertically or horizontally, but not both. If placed horizontally, a laser will light up all cells in its row with distance at most dd from the laser's cell. If placed vertically, it will light up all cells in its column with distance at most dd from the laser's cell. A laser always lights up its own cell, so the number of cells it will light up is always 2d+12d+1 (including the ones lit outside the matrix).
Hacker-man can choose the orientation (horizontal or vertical) of each laser.
In order to bypass the lock, the lasers should be in such a configuration that no cell in the matrix is lit up by more than one laser. You should find one such configuration, or report that it is impossible.
Input

The first line contains TT, the number of test cases. Then the test cases follow. 
For every test case:
The first line contains three space-separated integers, NN, dd, and KK, where NN is the length of one side of the square matrix, dd is the maximum reach of a laser, and KK is the number of lasers.
Each of the next KK lines contains two space-separated integers xixi and yiyi denoting the coordinates of the ii-th laser, where xixi is the distance from the left edge and yiyi is the distance from the bottom edge.

Note: No two lasers are at the same coordinates
Output
For each test case, print "Yes" or "No" (without quotes) depending on whether a configuration as described in the question is possible or not. If a configuration is possible, then in the next line print KK space-separated integers representing the orientations of the KK lasers respectively (00 for vertical and 11 for horizontal)
Case is sensitive. For example, "yEs" and "NO" are incorrect.
Constraints

1≤N≤1051≤N≤105
1≤d≤1051≤d≤105
1≤xi,yi≤N1≤xi,yi≤N

Subtasks
Subtask #1 (25 points):

1≤T≤101≤T≤10
1≤K≤1031≤K≤103 

Subtask #2 (40 points):

1≤T≤301≤T≤30
1≤K≤3⋅1041≤K≤3⋅104
The sum of KK over all test cases does not exceed 3⋅1043⋅104 

Subtask #3 (35 points):

1≤T≤1001≤T≤100
1≤K≤3⋅1051≤K≤3⋅105
The sum of KK over all test cases does not exceed 3⋅1053⋅105


                        Sample Input 1
                        





3
    10 3 3
    7 4
    7 8
    4 10
    10 2 5
    1 3
    4 1
    4 3
    4 5
    7 3
    10 2 4
    1 3
    2 2
    2 4
    4 3



                        Sample Output 1
                        





Yes
    0 1 1
    Yes
    0 1 1 1 0
    No


Explanation
Note: In the images below, the coordinates are given on a 2D plane, with (0, 0) being the bottom left corner
Test Case 1:
The image below shows the positions of the lasers denoted by red dots.

Now this second image shows the orientations of the lasers (satisfying the conditions). Black dots represent the positions lit by the laser (positions with red dots are also lit and represents that it is the centre of a laser)

Test Case 2:
The image below shows the positions of the lasers denoted by red dots.

Now this second image shows the orientations of the lasers (satisfying the conditions). Black dots represent the positions lit by the laser (positions with red dots are also lit and represents that it is the centre of a laser)

Test Case 3:
There is no possible combination of orientations satisfying all the conditions, therefore the answer is "No"




Author:
5★zankanotachi


Editorial:
https://discuss.codechef.com/problems/HKRMAN


Tags:

               
                 Disjoint Set Union, 2 SAT, Sliding Window
                 
                     
                     Advanced Data Structures, Advanced Algorithms, Algorithms, Greedy
                 
               
             
             



                        Difficulty Rating:
                    

2937


Date Added:
18-04-2021


Time Limit:
2 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

