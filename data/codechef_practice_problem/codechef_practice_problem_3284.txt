
Salmon has time-travelled to the dying days of the Roman Empire, and needs to travel to Rome.
There are NN cities in the Roman Empire; these are numbered from 00 to N−1N−1. City 00 is Rome. There are also MM unidirectional roads between some of these NN cities. The ii-th road is from city AiAi to city BiBi, and has a length of WiWi.
As the old saying goes, "All roads lead to Rome". In particular, starting at a city and following an arbitrary sequence of roads, one will eventually reach Rome and terminate. Note that there are no directed cycles in this graph. In other words, it is not possible to leave a city and then return to it later. 
In addition, to prevent the Empire from becoming too fractured, the roads were built such that the largest set of cities such that all cities in the set are pairwise unreachable from each other has size ≤10≤10. In other words, it is guaranteed that in any set of 1111 or more vertices, there will exist at least two vertices uu and vv, such that it is possible to travel from uu to vv in the original graph.
Salmon will make a journey from each city towards Rome. Each journey can be represented as a sequence of cities, SS, such that the first integer is the origin city and the last integer is city 0, Rome. Note that SS may have any size.
Salmon needs to travel between every two consecutive cities on his journey. It is not necessary that the cities are directly connected, however, the latter city must be reachable from the earlier one. Roman authorities now mandate that to travel from city XX to YY, one must hire soldiers for protection in city XX. As nowadays journeys near Rome are more dangerous, the number of soldiers to hire is equal to K−dYK−dY where dYdY represents the length of the longest path from YY to Rome, and KK is a constant. The cost of hiring a single soldier in city XX is cXcX. In addition, Salmon will have to pay an entry tax tYtY upon arrival in city YY, to enter. Notice that Salmon is not required to pay the entry fee for the city he starts in (the origin city), and that he only has to pay the entry fee for cities in the sequence SS.
Given that Salmon chooses his journeys optimally, what is the minimum cost of travelling from every city from 1…N−11…N−1 to Rome?
Input:

The first line will contain three integers: NN, MM, and KK.
The second line will contain NN integers: c0c1…cN−1c0c1…cN−1
The third line will contain NN integers: t0t1…tN−1t0t1…tN−1
The next MM lines will contain three integers each: uiviwiuiviwi, representing that there is an road from uiui to vivi of length wiwi.

Output:
Output N−1N−1 space-separated integers: the ii-th integer is the minimum cost to travel from city ii to Rome (city 0).
Constraints

2≤N≤1052≤N≤105
1≤M≤2∗1051≤M≤2∗105
dmax≤K≤109dmax≤K≤109, where dmaxdmax is the highest value of didi across all cities.
0≤ui,vi≤N−10≤ui,vi≤N−1
1≤wi≤1041≤wi≤104
1≤ci,ti≤1041≤ci,ti≤104
The road network forms a connected Directed Acyclic Graph, with node 00 as the sole sink.
There are no multi-edges.
The largest set of cities such that all cities are pairwise unreachable from each other has size ≤10≤10.

Subtasks

Subtask 1 [10 points]: N≤1000N≤1000, M≤2000M≤2000
Subtask 2 [15 points]: M=N−1M=N−1; ui=i+1ui=i+1, vi=ivi=i for all ii
Subtask 3 [25 points]: M=N−1M=N−1
Subtask 4 [50 points]: No additional constraints.

Sample Input 1
2 1 5
1 2 
3 4
1 0 2

Sample Output 1
13

Explanation
Salmon travels directly from city 1 to Rome (city 0). He has to hire 5−0=55−0=5 soldiers. The hiring-cost of each soldier in city 1 is 22. So, he has to spend 1010 on soldier salaries. In addition, he has to pay a tax of 33 to enter city 0, for a total of 1313.
Sample Input 2
3 3 17
4 4 1
9 6 8
2 0 5
2 1 8
1 0 2

Sample Output 2
77 26 




Author:
astoria


Editorial:
https://discuss.codechef.com/problems/UWCOI21G


Tags:

               
                 Directed Acyclic Graphs, Convex Hull
                 
                     
                     Data Structures, Graphs, Directed Graphs, Advanced Algorithms, Computational Geometry, Polygons
                 
               
             
             



                        Difficulty Rating:
                    

3373


Date Added:
17-12-2020


Time Limit:
2 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

