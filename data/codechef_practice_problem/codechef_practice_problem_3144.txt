
Salmon is going on holiday, and he decides to go to Silvermill after taking the advice of his good friend Peanut. Unfortunately, his computer is broken, and so he cannot Google for the map.
Silvermill is a city consisting of NN road junctions, numbered from 11 to NN, and N−1N−1 roads. The city is fully connected, meaning it is possible to travel from every road junction to every other road junction using the roads in the city. The government building is also at one road junction, which is considered a special road junction. Hence, the road network forms a rooted tree with nodes are road junctions and edges as roads. In addition, there are no more than three roads connected to each junction in the city.
Salmon needs to obtain a map of Silvermill. It suffices to find the parent of each node in the tree. If the node is the root, then its parent is -1.
To find the map of the city, he has hired a cartographer who can answer the following question: “what is the lowest common ancestor of nodes XX and YY?” The cartographer answers this question at most QQ times before quitting his job.
Help Salmon! Using at most QQ queries to the lowest common ancestor of two nodes, recover the tree!
Interaction format

The first line of input will contain TT, number of testcases. Then the testcases follow.
For each testcase, the input contains one line containing NN, the number of nodes in the tree, and QQ, the maximum number of queries you are allowed to ask.
To query the lowest common ancestor of a pair of nodes (x,y)(x,y), output ? x y. This uses up one query. If either of the two nodes is out of the range [1,N][1,N] or you have exceeded the query limit QQ, the judge replies -1 exiting with a wrong answer verdict and you should terminate your program immediately. Otherwise, the judge outputs the LCA of the two nodes.
When you have the answer, output !  followed by NN space-separated integers. The ii-th integer should be the parent of node ii in the tree (-1 if ii is the root). Note that this is not counted as a query. If the parent values are correct, the judge outputs a single integer, 11 and you should process the next testcase(if any). Otherwise, the judge outputs −1−1 and returns with a wrong answer verdict. In this case, you should terminate your program immediately.

Constraints

T=5T=5
1≤N≤10001≤N≤1000
1≤Q≤250001≤Q≤25000
For each query, the two nodes you query should be in the range [1,N][1,N].
For each answer, all the parent values should be in the range [1,N][1,N] or equal to -1.
There are at most three roads connected to each junction.
The grader is not adaptive.

Subtasks

Subtask 1 [15 points] : 1≤N≤100,Q=50001≤N≤100,Q=5000
Subtask 2 [25 points]: Q=25000Q=25000. Each junction has at most two roads connected to it.
Subtask 3 [60 points]: Q=25000Q=25000.

Sample Interaction:
Below is an example in which there are two testcases both with N=3N=3. In the first testcase, node 11 is the root and nodes 22  and 33 are its children. In the second testcase, node 22 is the root. The parent of node 11 is node 22 and that of node 33 is node 11.
You             Judge
                2          // T
                3 4        //  N, Q for the first testcase
? 1 2
                1          // LCA(1, 2) = 1
? 2 3
                1          // LCA(2, 3) = 1
! -1 1 1
                1          // Judge replies that your answer
                           // is correct

                3 3        //  N, Q for the second testcase
? 1 2
                2          // LCA(1, 2) = 2
? 2 3
                2          // LCA(2, 3) = 2
? 3 1
                1          // LCA(3, 1) = 1
! 2 -1 1
                1          // Judge replies that your answer
                           // is correct




Author:
3★kimbj0709


Editorial:
https://discuss.codechef.com/problems/UWCOI21E


Tags:

               
                 Trees, Interactive Problems, Randomized Algorithms, Expected Value, Lowest Common Ancestor, Sorting
                 
                     
                     Data Structures, Graphs, Special, Advanced Algorithms, Mathematics, Probability, Algorithms, Graph Algos
                 
               
             
             



                        Difficulty Rating:
                    

3126


Date Added:
12-12-2020


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

