
Nayra doesn't like stories of people receiving random trees as birthday presents, but this time she received a tree as a present for her own birthday! After struggling for a day trying to figure out what to do with this tree, she asked Aryan for help. He gave her this problem.
You are given a tree with NN vertices and weighted edges. It is rooted at vertex 11.
Define g(u,v)g(u,v) to be the maximum weight of an edge on the shortest path between vertex uu and vertex vv in this tree.
Just calculating g(u,v)g(u,v) is too easy, so you have to process QQ queries.
In each query, you are given KK distinct vertices v1,v2,…,vKv1,v2,…,vK. You have to compute the sum of the gg-values of each pair of vertices among these KK, i.e, the value
∑i=1K−1∑j=i+1Kg(vi,vj)∑i=1K−1∑j=i+1Kg(vi,vj)
Note: The input and output are large, so use fast input-output methods.
Input Format

The first line of input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains two space-separated integers NN and QQ, denoting the number of vertices in the tree and the number of queries respectively.
The second line contains N−1N−1 space-separated integers P2,P3,…,PNP2,P3,…,PN, where PiPi is the parent of vertex ii.
The third line contains N−1N−1 space-separated integers W2,W3,…,WNW2,W3,…,WN, where WiWi is the weight of the edge between vertices ii and PiPi.
The next QQ lines contain queries you will have to answer. The description of QQ queries follows.
The ii-th line contains an integer KiKi followed by KiKi distinct space-separated integers v1,v2,…,vKiv1,v2,…,vKi, where KiKi is the number of vertices in this query and v1,v2,…vKiv1,v2,…vKi denote the vertices themselves.

Output Format
For each test, print one line containing QQ space-separated integers. The ii-th of these integers should be the answer to the ii-th query.
Constraints

1≤T≤31≤T≤3
10≤N≤10510≤N≤105
1≤Pi<i1≤Pi<i
1≤Wi≤5⋅1061≤Wi≤5⋅106
1≤Q≤3⋅1041≤Q≤3⋅104
10≤Ki≤N10≤Ki≤N
1≤vi≤N1≤vi≤N
All vivi present in a single query are distinct
It is guaranteed that the sum of KiKi over all queries over all test cases in a single test file does not exceed 1.5⋅1061.5⋅106
It is guaranteed that the sum of QQ over all test cases in a single test file does not exceed 3⋅1043⋅104


                        Sample Input 1
                        





1
10 1
1 2 2 3 5 4 4 8 8
20 30 40 50 60 70 80 90 100
10 1 4 5 6 2 3 7 8 9 10



                        Sample Output 1
                        





3300



                        Sample Input 2
                        





1
10 2
1 2 2 3 5 4 4 8 8
20 30 40 50 60 70 80 90 100
4 1 4 5 6
4 2 3 7 8



                        Sample Output 2
                        





320 410


Explanation
In the second sample:
Let's look at different values of g(u,v)g(u,v) for this tree.
For the first query, g(1,4)=40g(1,4)=40, g(1,5)=50g(1,5)=50, g(1,6)=60g(1,6)=60, g(4,5)=50g(4,5)=50, g(4,6)=60g(4,6)=60, g(5,6)=60g(5,6)=60. The sum of all these values is 320320.
For the second query, g(2,3)=30g(2,3)=30, g(2,7)=70g(2,7)=70, g(2,8)=80g(2,8)=80, g(3,7)=70g(3,7)=70, g(3,8)=80g(3,8)=80, g(7,8)=80g(7,8)=80. The sum of all these values is 410410.
Note: The second sample does not satisfy the constraint Ki≥10Ki≥10, so it won't be present in the actual test data. It's added here only for illustration.




Author:
7★aryanc403


Tester:
suryaprak_adm


Editorial:
https://discuss.codechef.com/problems/YATP


Tags:

               
                 Trees, Disjoint Set Union, Auxiliary Tree
                 
                     
                     Data Structures, Graphs, Advanced Data Structures, Advanced Algorithms, Advanced Graph Algos
                 
               
             
             



                        Difficulty Rating:
                    

2890


Date Added:
30-11-2021


Time Limit:
4 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

