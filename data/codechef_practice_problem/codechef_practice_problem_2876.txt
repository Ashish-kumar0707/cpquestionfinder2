
This is an interactive task 
Let's clear things up with some definitions:

Two binary strings SS and TT are anagrams of each other if it is possible to rearrange the letters in the string SS to get a string equal to TT. 
Let S[l,r]S[l,r] be the substring of SS starting at ll and ending at rr both inclusive.
Let f(S,l,r)f(S,l,r) be the frequency of character 1 in S[l,r]S[l,r].

Chef has two hidden binary strings AA and BB both of which are of size NN. It is known that AA and BB are not anagrams. 
You can make queries on the two strings. Each query is of the form:
? l r
The judge will reply with the value of |f(A,l,r)−f(B,l,r)||f(A,l,r)−f(B,l,r)|
You have to find any such index ii such that both conditions are fulfilled:

A[1,i−1]A[1,i−1] and B[1,i−1]B[1,i−1] are anagrams. 
A[i+1,N]A[i+1,N] and B[i+1,N]B[i+1,N] are anagrams.

If there is no such index then print -1.
You can make atmost 3535 queries per test case.
Note: ii can be 11 or NN as well. We consider all of A[1,0],B[1,0],A[N+1,N],B[N+1,N]A[1,0],B[1,0],A[N+1,N],B[N+1,N] to be empty strings.
Interaction

Begin the interaction by reading a single integer TT denoting the number of test cases. The description of interaction for TT test cases follows.
Then for each test case read a single integer NN denoting the size of AA and BB.
To ask a query, output ? i j (1≤i≤j≤N1≤i≤j≤N) and then read a single integer.   
To print the answer, output ! then print the index.
If at any time you make an invalid query or exceed the query limit, the interaction is terminated and you will receive a Wrong Answer verdict.
Don't forget to flush the output after printing each line!

Constraints

1≤T≤1001≤T≤100
1≤N≤10001≤N≤1000
AA and BB are not anagrams of each other

Sample Interaction
Grader                You
3
4
                      ? 1 3
1
                      ? 2 4
0
                      ! 3
3          
                      ? 1 1
1
                      ? 2 3
2
                      ! -1
3
                      ? 1 2
2
                      ? 1 3
1
                      ! 1

Explanation

Test case 11: A=0101A=0101, B=1011B=1011

The query ? 1 3 gives |1−2|=1|1−2|=1
The query ? 2 4 gives |2−2|=0|2−2|=0
We can see that 
A[1,2]A[1,2] and B[1,2]B[1,2] are anagrams.
A[4,4]A[4,4] and B[4,4]B[4,4] are anagrams.
Therefore 33 is a valid answer.
Test case 22: A=111A=111, B=000B=000

The query ? 1 1 gives |1−0|=1|1−0|=1
The query ? 2 3 gives |2−0|=2|2−0|=2
There is no index satisfying the conditions, so we print −1−1.
Test case 33: A=110A=110, B=001B=001

The query ? 1 2 gives |2−0|=2|2−0|=2
The query ? 1 3 gives |2−1|=1|2−1|=1
We can see that 
A[1,0]A[1,0] and B[1,0]B[1,0] are anagrams (both are empty strings).
A[2,3]A[2,3] and B[2,3]B[2,3] are anagrams.
Therefore 11 is a valid answer.

Note: The above queries are just to demonstrate the interaction. They may or may not be sufficient to deduce the final answer. 



Author:
6★utkarsh_25dec


Tester:
7★aryanc403


Editorial:
https://discuss.codechef.com/problems/ANGSPLIT


Tags:

               
                 Case work, Interactive Problems, Observation, Binary Search
                 
                     
                     Special, Algorithms, Searching
                 
               
             
             



                        Difficulty Rating:
                    

2923


Date Added:
13-12-2021


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

