
Read problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
Ada is in charge of upgrading Chefland's electrical network ‚Äî she is implementing wireless electricity!
For simplicity, let's consider Chefland a two-dimensional world, where the cities are represented by points on a plane and electric wires (which are not necessarily connecting the cities) are represented by straight line segments.
There are NN cities in Chefland (numbered 11 through NN) and MM wires (numbered 11 through MM). For each valid ii, the position of the ii-th city is (Xi,Yi)(Xi,Yi). Also, for each valid ii, the ii-th wire is a line segment with endpoints (Ai,Bi)(Ai,Bi) and (Ci,Di)(Ci,Di) initially.
In order to transmit power, Ada built two plates (line segments): the positive plate, which has endpoints (‚àí1,0)(‚àí1,0) and (0,‚àí1)(0,‚àí1), and the negative plate, which has endpoints (106+1,106)(106+1,106) and (106,106+1)(106,106+1).
A wire is positive if it intersects the positive plate or intersects another wire about which we already know that it is positive. Similarly, a wire is negative if it intersects the negative plate or another negative wire. It is not allowed for any wire to be both positive and negative, because that creates a short-circuit.
For each valid ii, let SiSi be the minimum of distances of the ii-th city from endpoints of positive wires, and let TiTi be the minimum of its distances from endpoints of negative wires. Then, the cost of transmitting electricity to the ii-th city is S2i+T2iSi2+Ti2. Let PP be the sum of these costs over all cities.
You are allowed to move the wires, but not to rotate them. For each valid ii, the cost of moving the ii-th segment by hihi units horizontally and vivi units vertically from its original position is h2i+v2ihi2+vi2. After such a move, the endpoints of the segment become (Ai+hi,Bi+vi)(Ai+hi,Bi+vi) and (Ci+hi,Di+vi)(Ci+hi,Di+vi). Let QQ be the sum of costs of moving all the wires.
Your goal is to move the wires and make P+QP+Q as small as possible. In the final network of wires, there should be at least one positive wire, at least one negative wire, and no wire should be both positive and negative. However, it is allowed to have some wires that are neither positive nor negative.
Input

The first line of the input contains two space-separated integers NN and MM.
NN lines follow. For each valid ii, the ii-th of these lines contains two space-separated integers XiXi and YiYi.
MM more lines follow. For each valid ii, the ii-th of these lines contains four space-separated integers AiAi, BiBi, CiCi and DiDi.

Output
Print MM lines. For each valid ii, the ii-th of these lines should contain two space-separated integers hihi and vivi denoting that the ii-th wire is moved by hihi (|hi|‚â§106|hi|‚â§106) units horizontally and by vivi (|vi|‚â§106|vi|‚â§106) units vertically.
Example Input
4 4
1 1
2 2
3 3
4 4
0 0 4 2
3 5 4 2
4 5 2 4
1 5 3 2

Example Output
-1 0
-1 0
-1 1
2 0

Explanation
The following figure shows the cities ùñ†A, ùñ°B, ùñ¢C and ùñ£D, the positive plate ùñ§ùñ•EF, negative plate ùñ¶ùñßGH and the wires ùñ®ùñ©IJ, ùñ™ùñ´KL, ùñ¨ùñ≠MN and ùñÆùñØOP. Note that the negative plate is drawn closer for clarity.

The following figure describes the state after moving the wires.

Test Generation
The source code used to generate test data can be downloaded here.

N=104N=104
M=2500M=2500
all coordinates of the NN cities are chosen uniformly randomly and independently among integers between 00 and 106106 inclusive
for each valid ii, XiXi and YiYi are chosen uniformly randomly and independently among integers between 00 and 106106 inclusive
a parameter LL is chosen: LL can be 8,0008,000, 10,00010,000, 12,00012,000, 14,00014,000 or 16,00016,000
For each ii from 11 to MM:
two integers hihi and vivi different than zero are chosen uniformly randomly and independently between ‚àíL‚àíL and LL inclusive
AiAi is chosen uniformly randomly among integers between max(0,‚àíhi)max(0,‚àíhi) and min(106,106‚àíhi)min(106,106‚àíhi) inclusive
BiBi is chosen uniformly randomly among integers between max(0,‚àívi)max(0,‚àívi) and min(106,106‚àívi)min(106,106‚àívi) inclusive
Ci=Ai+hiCi=Ai+hi
Di=Bi+viDi=Bi+vi

There are two test files for each possible value of LL.
Scoring
The source code used to determine the score of your solution can be downloaded here.
If your output is invalid, in particular if there is no positive wire, no negative wire, or if some wire is declared both positive and negative, you will receive the Wrong Answer verdict.
The score for each test case (and therefore each test file) is P+QP+Q. The score of a submission is equal to the sum of its scores over all test cases. Your goal is to minimise the score of your submission.
There are 10 test files. During the contest, the displayed score will account for exactly 5 test files, i.e. your score reflects your submission's performance on 50% (5/10) of the test files. However, if your program gets a non-AC verdict on any test file, your submission's verdict will be non-AC. In other words, an AC verdict denotes that your program runs successfully on all the test files. After the end of the contest, your score will be changed to include the sum of your program's scores over the other 5 test files.



Author:
7‚òÖalei


Editorial:
https://discuss.codechef.com/problems/WIREL


Tags:

               
                 alei, geometry, heuristic, march21, tie-breaker
                 
               
             
             



                        Difficulty Rating:
                    

3651


Date Added:
20-02-2021


Time Limit:
5 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

