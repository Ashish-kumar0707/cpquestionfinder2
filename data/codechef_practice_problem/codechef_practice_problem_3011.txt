
Vishesh just found an array AA having NN positive integers. He hates even numbers and would like to make the array full of only odd numbers. To do so, he is allowed to do the following operation.

Pick a positive integer XX such that X=2YX=2Y for some non-negative integer YY. Then, for all elements AiAi in AA, if AiAi is divisible by XX, then we divide AiAi by XX (in other words, we assign Ai←AiXAi←AiX).

Let's define f(B)f(B) as the minimum operations required to make an array BB have only odd numbers using the operation described above. Find the sum of f(a)f(a) over all subarrays aa of AA.
Note: A subarray of AA is acquired by removing some (possibly none) elements from the beginning and some (possible none) elements from the end of AA.
Input Format

The first line of each input contains TT - the number of test cases. The test cases then follow.
The first line of each test case contains an integer NN - the size of AA.
The second line of each test case contains NN space-separated integers A1,A2,…,ANA1,A2,…,AN - the array AA.

Output Format
For each test case, output on a single line the answer to the problem.
Constraints

1≤T≤10001≤T≤1000
1≤N≤1051≤N≤105
1≤Ai≤1061≤Ai≤106
Sum of NN over all test cases is not more than 5⋅1055⋅105


                        Sample Input 1
                        





2
3
1 2 4
3
1 2 1



                        Sample Output 1
                        





7
4


Explanation

Test case 11:
[1][1] requires 00 operations.
[1,2][1,2] requires 11 operation.
[1,2,4][1,2,4] requires 22 operations.
[2][2] requires 11 operation.
[2,4][2,4] requires 22 operations.
[4][4] requires 11 operation.

Therefore, sum of f(a)f(a) over all subarrays aa of AA is 77.

Test case 22:
[1][1] requires 00 operations.
[1,2][1,2] requires 11 operation.
[1,2,1][1,2,1] requires 11 operation.
[2][2] requires 11 operation.
[2,1][2,1] requires 11 operation.
[1][1] requires 00 operations.

Therefore, sum of f(a)f(a) over all subarrays aa of AA is 44.



Author:
4★vishesh_s


Editorial:
https://discuss.codechef.com/problems/MAKEODD


Tags:

               
                 bitmasking, bitwise-operation, dynamic-programming, easy-medium, exun2021, math, vishesh_s
                 
               
             
             



                        Difficulty Rating:
                    

3002


Date Added:
6-01-2022


Time Limit:
3 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

