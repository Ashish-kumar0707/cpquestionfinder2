
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
You are given a string SS with length NN that contains only the 2626 lowercase English letters. You are also given a sequence W1,W2,…,W26W1,W2,…,W26 of weights corresponding to these letters in the order from 'a' to 'z', i.e. W1W1 is the weight of 'a', W2W2 is the weight of 'b' and so on.
We define the weight of a string as the sum of weights of all characters present in it. If a character occurs multiple times in this string, its weight is also counted multiple times.
Next, we define the power of a string ss as the sum of weights of all strings rr such that ss can be represented as r+r+…+r+pr+r+…+r+p, where ++ denotes string concatenation and pp is a prefix of rr (possibly empty).
Consider a contiguous substring of SS chosen uniformly randomly among all its N(N+1)/2N(N+1)/2 contiguous substrings. Find the expected value of the power of such a substring. The expected power can be represented as a fraction P/QP/Q, where PP and QQ are positive integers and QQ is coprime with 998,244,353998,244,353. You should calculate P⋅Q−1P⋅Q−1 modulo 998,244,353998,244,353, where Q−1Q−1 denotes the multiplicative inverse of QQ modulo 998,244,353998,244,353.
Input

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains a single string SS.
The second line contains 2626 space-separated integers W1,W2,…,W26W1,W2,…,W26.

Output
For each test case, print a single line containing one integer P⋅Q−1P⋅Q−1 modulo 998,244,353998,244,353.
Constraints

1≤N≤500,0001≤N≤500,000
1≤Wi≤1091≤Wi≤109 for each valid ii
SS contains only lowercase English letters
the sum of |S||S| over all test cases does not exceed 500,000500,000

Subtasks
Subtask #1 (10 points):

N≤100N≤100
the sum of |S||S| over all test cases does not exceed 1,0001,000

Subtask #2 (20 points):

N≤2,000N≤2,000
the sum of |S||S| over all test cases does not exceed 20,00020,000

Subtask #3 (70 points): original constraints

                        Sample Input 1
                        





2
aaa
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
abab
1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1



                        Sample Output 1
                        





499122179
698771051


Explanation
Let W(s)W(s) and P(s)P(s) denote the weight and power of a string ss respectively.
Example case 1: There are 33 contiguous substrings "a", 22 contiguous substrings "aa" and 11 contiguous substring "aaa".

"a" is chosen with probability 3/63/6; we have P(a)=W(a)=1P(a)=W(a)=1
"aa" is chosen with probability 2/62/6; P(aa)=W(a)+W(aa)=1+2=3P(aa)=W(a)+W(aa)=1+2=3
"aaa" is chosen with probability 1/61/6; P(aaa)=W(a)+W(aa)+W(aaa)=1+2+3=6P(aaa)=W(a)+W(aa)+W(aaa)=1+2+3=6

The expected power is (3⋅1+2⋅3+1⋅6)/6=15/6(3⋅1+2⋅3+1⋅6)/6=15/6.
Example case 2: The contiguous substrings are "a", "b", "ab", "ba", "aba", "bab", "abab"; the first three of them occur twice. We have P(a)=W(a)=1P(a)=W(a)=1, P(b)=W(b)=2P(b)=W(b)=2, P(ab)=W(ab)=1+2=3P(ab)=W(ab)=1+2=3, P(ba)=W(ba)=3P(ba)=W(ba)=3, P(aba)=W(ab)+W(aba)=3+4=7P(aba)=W(ab)+W(aba)=3+4=7, P(bab)=W(ba)+W(bab)=3+5=8P(bab)=W(ba)+W(bab)=3+5=8 and P(abab)=W(ab)+W(abab)=3+6=9P(abab)=W(ab)+W(abab)=3+6=9.
The expected power is (2⋅P(a)+2⋅P(b)+2⋅P(ab)+P(ba)+P(aba)+P(bab)+P(abab))/10=39/10(2⋅P(a)+2⋅P(b)+2⋅P(ab)+P(ba)+P(aba)+P(bab)+P(abab))/10=39/10.



Author:
6★aviroop123


Editorial:
https://discuss.codechef.com/problems/EXPREP


Tags:

               
                 Suffix Automaton, Suffix Arrays, Fenwick Trees, DSU on Trees
                 
                     
                     Advanced Data Structures, Suffix Structures, Advanced Tree Structures, Advanced Algorithms, Advanced Graph Algos
                 
               
             
             



                        Difficulty Rating:
                    

3155


Date Added:
2-06-2020


Time Limit:
3.5 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

