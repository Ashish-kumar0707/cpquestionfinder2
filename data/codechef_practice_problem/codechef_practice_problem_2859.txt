
Read problems statements in Mandarin Chinese, Russian, Vietnamese and Bengali as well.
You are given an N×MN×M matrix where each element of the matrix consists of an integer color. Let A[i][j]A[i][j] be the color on the matrix in the ii-th row from the top and jj-th column from the left. You need to make the matrix beautiful.
By definition, a matrix is beautiful if all the elements of the ii-th row have color ii. 
That is, all the elements of the first row have color 11, all elements of the second row have color 22, so on.
In an operation, you can do the following:

Choose four integers x1,y1,x2,y2x1,y1,x2,y2 (1≤x1,x2≤N1≤x1,x2≤N, 1≤y1,y2≤M1≤y1,y2≤M, x1≠x2,y1≠y2x1≠x2,y1≠y2)
Swap the values A[x1][y1]A[x1][y1] and A[x2][y1]A[x2][y1].
Swap the values A[x1][y2]A[x1][y2] and A[x2][y2]A[x2][y2].

If you can make the matrix beautiful, then give a sequence of at most (N+3)⋅(M+3)(N+3)⋅(M+3) operations to do so. Otherwise, print −1−1.
We have a proof that if it is possible to make the matrix beautiful in a finite number of operations, then it can be done in at most (N+3)⋅(M+3)(N+3)⋅(M+3) operations.
Input Format

The first line contains a single integer TT - the number of test cases. Then the test cases follow.
The first line of each test case contains two integers NN and MM.
The next NN lines have MM integers each. The jj-th integer in the ii-th line denotes A[i][j]A[i][j]

Output Format
For each test case:

If it is possible to make the matrix beautiful:
Print the number of operations you perform in a new line. This number has to be less than or equal to (N+3)⋅(M+3)(N+3)⋅(M+3).
For each operation print four integers: x1x1, y1y1, x2x2, y2y2 in a new line. 
If it is not possible to make the matrix beautiful:
Print −1−1 in a new line.

If there are multiple ways to make the matrix beautiful with at most (N+3)⋅(M+3)(N+3)⋅(M+3) operations, you may print any of them.
Constraints

1≤T≤1001≤T≤100
1≤N,M≤501≤N,M≤50
Each column contains a permutation of the integers 1,…,N1,…,N.


                        Sample Input 1
                        





2
3 3
1 1 1
2 3 3
3 2 2
3 3
1 1 1
2 3 2
3 2 3



                        Sample Output 1
                        





1
2 2 3 3
-1


Explanation

For the first test case, we can swap A[2][2],A[3][2]A[2][2],A[3][2] and swap A[2][3],A[3][3]A[2][3],A[3][3] to make the matrix beautiful.
For the second test case it is not possible to make the matrix beautiful.




Author:
4★smarth297


Editorial:
https://discuss.codechef.com/problems/MATBEAUT


Tags:

               
                 ad-hoc, Observation
                 
                     
                     Algorithms, Constructive
                 
               
             
             



                        Difficulty Rating:
                    

2912


Date Added:
25-07-2021


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

