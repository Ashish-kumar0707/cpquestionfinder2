
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
Sonya lives in a magical land which consists of NN cities (numbered 11 through NN) and N−1N−1 roads connecting them. In other words, the country where Sonya lives is a tree.
The country is magical because toys of an infinite number of types are made there. The types of toys are labeled by all integers and in each city, there is a toy store which sells an infinite number of toys of each type.
Some stores make better toys of some types than other stores. For each valid ii and each integer jj, the quality of any toy with type jj in the store in city ii is Ki⋅j+BiKi⋅j+Bi, where KiKi and BiBi are parameters of this store.
Sonya loves to buy toys from the magical land as gifts for her friends. She knows what types of toys her friends like. Therefore, she sometimes decides that she wants to buy a toy with some type zz, travels along the shortest path between some cities uu and vv and buys one toy with the chosen type zz. Obviously, she wants this toy to have the maximum possible quality among all toys with this type found in stores on this path (including stores in cities uu and vv), so she needs to know this maximum quality.
Also, sometimes, there are new reforms in the magical land, which change the parameters of some stores. In each reform, the shortest path between two cities uu and vv is chosen, along with two parameters xx and yy. Then, for each city cc on this path (including uu and vv), KcKc is increased by xx and BcBc is increased by yy.
Your task is to process QQ queries of two types:

uu, vv, xx, yy: There is a new reform.
uu, vv, zz: Sonya wants to know the maximum of qualities of toys with type zz sold on the simple path between cities uu and vv.

Input

The first line of the input contains two space-separated integers NN and QQ.
The second line contains NN space-separated integers — the initial values of K1,K2,…,KNK1,K2,…,KN.
The third line contains NN space-separated integers — the initial values of B1,B2,…,BNB1,B2,…,BN.
Each of the following N−1N−1 lines contains two space-separated integers uu and vv denoting that cities uu and vv are connected by a road.
The next QQ lines describe queries.
Each of these lines starts with three space-separated integers tt, uu and vv, where tt denotes the type of the current query.
If t=1t=1, this is followed by a space and two space-separated integers xx and yy.
If t=2t=2, this is followed by a space and one integer zz.

Output
For each query of the second type, print a single line containing one integer — the maximum possible quality of a toy Sonya can buy.
Constraints

1≤N,Q≤1051≤N,Q≤105
1≤u,v≤N1≤u,v≤N
|Ki|≤108|Ki|≤108 for each valid ii
|Bi|≤1016|Bi|≤1016 for each valid ii
|x|≤104|x|≤104
|y|,|z|≤109|y|,|z|≤109
1≤t≤21≤t≤2
the graph described on the input is a tree

Subtasks
Subtask #1 (11 points): 1≤N,Q≤5,0001≤N,Q≤5,000
Subtask #2 (36 points): each city is directly connected to at most two other cities
Subtask #3 (53 points): original constraints

                        Sample Input 1
                        





6 6
1 2 1 3 3 -1
-1 -5 -4 6 8 -14
3 4
2 1
2 3
6 4
3 5
2 1 5 -20
1 4 5 -7 4
2 3 6 -5
2 1 3 3
1 2 4 -1 20
2 6 2 8



                        Sample Output 1
                        





-21
30
2
23





Author:
7★smelskiy


Tags:

               
                 HLD, DFS
                 
                     
                     Advanced Algorithms, Advanced Graph Algos, Algorithms, Graph Algos, Traversals
                 
               
             
             



                        Difficulty Rating:
                    

2698


Date Added:
27-04-2019


Time Limit:
4 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

