
Chef is the king of the kingdom named Chefland. Chefland consists of NN cities numbered from 11 to NN and (N−1)(N−1) roads in such a way that there exists a path between any pair of cities. In other words, Chefland has a tree like structure. 
Out of the NN cities in Chefland, KK (1≤K≤N)(1≤K≤N) are considered tourist attractions.
Chef decided to visit exactly (K−1)(K−1) out of KK tourist attractions. He wishes to stay in the city ii (1≤i≤N)(1≤i≤N) such that the sum of distances of the nearest (K−1)(K−1) tourist attractions from city ii is as minimum as possible. 
More formally, if Chef stays at city ii and visits (K−1)(K−1) tourist attractions denoted by set SS, then, the value ∑j∈SD(i,j)∑j∈SD(i,j) should be minimum.
Here, D(i,j)D(i,j) denotes the distance between cities ii and jj which is given by the number of roads between cities ii and jj.
Find the city in which Chef should stay. If there are multiple such cities, print the one with the largest number.
Input Format

First line will contain integer TT, the number of test cases. Then the test cases follow.
The first line of each test case contains two integers NN and KK denoting the number of total cities and the number of tourist attractions in Chefland.
The second line of each test case contains KK integers denoting the numbers of cities which are tourist attractions in Chefland.
The next N−1N−1 lines contain two integers each, uiui and vivi denoting that a road exists between cities uiui and vivi.

Output Format

For each test case, output in a single integer the number of the city in which Chef should stay so that sum of distances to nearest (K−1)(K−1) tourist attractions is as minimum as possible.
If there are multiple such cities, output the city with the maximum number.

Constraints

1≤T≤101≤T≤10
1≤N≤1051≤N≤105
1≤K≤N1≤K≤N
1≤ui,vi≤N1≤ui,vi≤N


                        Sample Input 1
                        





2
5 3
2 4 5
1 2
1 3
3 4
3 5
5 2
2 5
1 2
1 3
3 4
3 5



                        Sample Output 1
                        





5
5


Explanation
Test case 11: Chef needs to visit 3−1=23−1=2 tourist attractions. The total distance to visit 22 tourist attractions from each of the cities is:

From city 11: Nearest tourist attractions are cities 22 and 44 or 55. The sum of distances for these cities is 1+2=31+2=3.
From city 22: Nearest tourist attractions are cities 22 and 44 or 55. The sum of distances for these cities is 0+3=30+3=3.
From city 33: Nearest tourist attractions are cities 44 and 55. The sum of distances for these cities is 1+1=21+1=2.
From city 44: Nearest tourist attractions are cities 44 and 55. The sum of distances for these cities is 0+2=20+2=2.
From city 55: Nearest tourist attractions are cities 55 and 44. The sum of distances for these cities is 2+0=22+0=2.

The cities from which the distance is minimum are 3,4,3,4, and 55. Out of these, 55 is the highest.
Test case 22: Chef needs to visit 2−1=12−1=1 tourist attractions. The total distance to visit 11 tourist attractions from each of the cities is:

From city 11: Nearest tourist attraction is city 22. The sum of distances is 11.
From city 22: Nearest tourist attraction is city 22. The sum of distances is 00.
From city 33: Nearest tourist attraction is city 55. The sum of distances is 11.
From city 44: Nearest tourist attraction is city 55. The sum of distances is 22.
From city 55: Nearest tourist attraction is city 55. The sum of distances is 00.

The cities from which the distance is minimum are 22 and 55. Out of these, 55 is the highest.



Author:
5★dhananjay_777


Editorial:
https://discuss.codechef.com/problems/HLPCHF


Tags:

               
                 dhananjay_777, dp-on-trees, easy-medium, start35, trees
                 
               
             
             



                        Difficulty Rating:
                    

2859


Date Added:
5-01-2022


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

