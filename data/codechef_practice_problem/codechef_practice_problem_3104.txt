
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
Chef has a tree with NN nodes (numbered 11 through NN). Each node has a value; let's denote the value of node ii by vivi. Chef likes to travel in this tree. For each pair of nodes (u,v)(u,v), he defines the score of the path from uu to vv in the following way:

Suppose that the simple path from node uu to node vv is a sequence of nodes u=a0,a1,…,aL=vu=a0,a1,…,aL=v, where LL is the length of this path.
Let's denote the values of the nodes on this path by a sequence A0,A1,…,ALA0,A1,…,AL, where for each valid ii, Ai=vaiAi=vai.
Next, let's denote the suffix sums of the sequence AA by S0,S1,…,SLS0,S1,…,SL, i.e. for each valid ii, Si=∑Lj=iAjSi=∑j=iLAj.
The score f(u,v)f(u,v) of the path from node uu to node vv is the sum of all these suffix sums, i.e. f(u,v)=∑Li=0Sif(u,v)=∑i=0LSi.

Chef wants to choose some nodes uu and vv (u≠vu≠v) and travel along the simple path from uu to vv. However, he can treat it as several consecutive paths, which affects the score of the resulting trip. Specifically, if the simple path from node uu to node vv is a sequence of nodes u=a0,a1,…,aL=vu=a0,a1,…,aL=v, then Chef may choose any non-negative integer mm and any sequence k1,k2,…,kmk1,k2,…,km such that 1≤k1<k2<…km<L1≤k1<k2<…km<L; then, the score of the trip from uu to vv is f(u,ak1)+f(ak1,ak2)+…+f(akm,v)f(u,ak1)+f(ak1,ak2)+…+f(akm,v). Specifically, if m=0m=0, the score of the trip is simply f(u,v)f(u,v).
Find the maximum possible score of Chef's trip if the nodes uu and vv (such that u≠vu≠v) and the sequence kk are chosen optimally.
Input

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains a single integer NN.
The second line contains NN space-separated integers v1,v2,…,vNv1,v2,…,vN.
N−1N−1 lines follow. Each of these lines contains two space-separated integers aa and bb denoting that nodes aa and bb are connected by an edge.

Output
For each test case, print a single line containing one integer ― the maximum possible score.
Constraints

1≤T≤1001≤T≤100
2≤N≤3⋅1052≤N≤3⋅105
|vali|≤105|vali|≤105 for each valid ii
1≤a,b≤N1≤a,b≤N
the graph described on the input is a tree
the sum of NN over all test cases does not exceed 3⋅1053⋅105

Subtasks
Subtask #1 (50 points): the sum of NN over all test cases does not exceed 103103
Subtask #2 (50 points): original constraints
Example Input
1
3
-10 2 4
1 2
1 3

Example Ouput
-2

Explanation
Example case 1: We have f(1,2)=−6f(1,2)=−6, f(2,1)=−18f(2,1)=−18, f(1,3)=−2f(1,3)=−2, f(3,1)=−16f(3,1)=−16, f(2,3)=−6f(2,3)=−6 and f(3,2)=−10f(3,2)=−10. A trip from node 22 to node 33 can be split into the paths 2→1→32→1→3 with score −20−20, and a trip from node 33 to node 22 can be split into the paths 3→1→23→1→2 with score −22−22. Each trip can also be treated as one path. The maximum score is −2−2 for the trip from node 11 to node 33.



Author:
5★sajib_readd


Editorial:
https://discuss.codechef.com/problems/JMPFVR


Tags:

               
                 Trees, DSU on Trees, Convex Hull, DFS
                 
                     
                     Data Structures, Graphs, Advanced Algorithms, Advanced Graph Algos, Computational Geometry, Polygons, Algorithms, Graph Algos, Traversals
                 
               
             
             



                        Difficulty Rating:
                    

3080


Date Added:
20-04-2020


Time Limit:
2 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

