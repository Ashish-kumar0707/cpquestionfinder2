
“Do you know what someone with no money has in common with someone with too much money? Living is no fun for them.”
Gi-Hun wants to know the truth about the game and II-nam has asked him to solve this puzzle in order to get answers to his questions.
Gi-Hun is given a tree consisting of NN nodes numbered from 11 to NN, rooted at node 1. Each node ii has been assigned a value AiAi.
Also given is a set of special edges SS, consisting of some edges of the given tree (each edge is denoted by a pair of integers).
Gi-Hun is required to answer QQ queries.
There are 3 different types of queries.

1 u K1 u K — consider the subtree of uu in the tree, denoted by TuTu. You would like divide TuTu into KK disconnected components by removing exactly K−1K−1 non-special (i.e, not in SS) edges from TuTu such that the following value is maximized:

For v∈Tuv∈Tu, let ZvZv be the number of edges removed on the path from uu to vv, plus 11.
Then, you would like to maximize the value
∑v∈TuZv⋅Av∑v∈TuZv⋅Av
If it is not possible to remove K−1K−1 non-special edges from TuTu, print IMPOSSIBLE instead. 

2 u v2 u v — add edge u−vu−v to set SS. It is guaranteed that this edge is part of the tree and is not already in SS.
3 u v3 u v — remove edge u−vu−v from set SS. It is guaranteed that this edge is already in SS.

Note: The original tree is restored after every query of type 11, i.e, edges are not permanently removed from the tree.
Input Format

The first line of input contains a single integer TT, denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains two space-separated integers NN and QQ, denoting the number of nodes of the tree and the number of queries respectively.
The second line contains N−1N−1 space-separated integers P2,P3,…,PNP2,P3,…,PN, where PiPi is the parent of node ii.
The third line contains NN space-separated integers A1,A2,…,ANA1,A2,…,AN — the values of the nodes.
The fourth line contains a single integer MM, denoting the number of edges in the set SS.
The next MM lines describe the set SS. The ii-th of these MM lines contains two integers uiui and vivi, denoting that edge ui−viui−vi is present in SS.
The next QQ lines each contain 33 integers describing the queries as given in the statement.

Output Format
For each query of type 11, output on a new line the maximum value of ∑v∈TuZv⋅Av∑v∈TuZv⋅Av, or IMPOSSIBLE if there doesn't exist a way to remove K−1K−1 non-special edges.
Constraints

1≤T≤1041≤T≤104
2≤N≤1052≤N≤105
1≤Q≤1051≤Q≤105
0≤M≤N−10≤M≤N−1
1≤K≤301≤K≤30
1≤Pi≤N1≤Pi≤N
−109≤Ai≤109−109≤Ai≤109
1≤u,v≤N1≤u,v≤N
SS will always contain only edges which are a part of the tree.
Sum of NN over all test cases does not exceed 105105
Sum of QQ over all test cases does not exceed 105105


                        Sample Input 1
                        





1
5 9
1 1 2 2
1 -3 4 -6 10
1
1 3
1 1 3
3 1 3
1 1 3
1 2 2
2 2 5
1 2 3
1 1 4
1 1 5
1 2 1



                        Sample Output 1
                        





17
20
11
IMPOSSIBLE
5
IMPOSSIBLE
1


Explanation

Query 1: S={(1,3)}S={(1,3)}. Remove edges (1,2)(1,2) and (2,5)(2,5). The ZZ-values of the nodes are [1,2,1,2,3][1,2,1,2,3]. This gives us ∑v∈T1Zv⋅Av=1⋅1+2⋅(−3)+1⋅4+2⋅(−6)+3⋅10=17∑v∈T1Zv⋅Av=1⋅1+2⋅(−3)+1⋅4+2⋅(−6)+3⋅10=17.
Query 2: Remove (1,3)(1,3) from SS. SS is now empty.
Query 3: SS is empty. Remove edges (1,3)(1,3) and (2,5)(2,5). The ZZ-values of the nodes are [1,1,2,1,2][1,1,2,1,2], which makes ∑v∈T1Zv⋅Av=20∑v∈T1Zv⋅Av=20.
Query 4: - SS is empty. Remove the edge (2,5)(2,5). This gives us Z2=Z4=1Z2=Z4=1 and Z5=2Z5=2, with the value being 1⋅(−3)+1⋅(−6)+2⋅10=111⋅(−3)+1⋅(−6)+2⋅10=11.
Query 5: Add (2,5)(2,5) to SS. Now, S={(2,5)}S={(2,5)}.
Query 6: It is impossible to remove two non-special edges from the subtree of 22.



Author:
5★nishitsharma03


Tags:

               
                 Segment Trees, DFS, Euler Tour
                 
                     
                     Advanced Data Structures, Advanced Tree Structures, Algorithms, Graph Algos, Traversals
                 
               
             
             



                        Difficulty Rating:
                    

3127


Date Added:
17-12-2021


Time Limit:
2 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

