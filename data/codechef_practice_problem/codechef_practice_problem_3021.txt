
Chef has an array AA of NN integers. He asks you QQ queries. For each query, you are given the following:

An integer XX (0≤X<220)(0≤X<220).
An array BB of size MM such that 1≤Bj≤N1≤Bj≤N. 

You need to erase minimum number of elements from AA such that the bitwise-OR of the remaining elements is at most XX and no element having index BjBj is erased.
For each query, find the maximum number of remaining elements such that the bitwise OR of the remaining elements is at most XX and no element with index BjBj is erased. If it is impossible to get an OR of at most XX, print −1−1.
Note: The bitwise OR of an empty array is considered 00.
Input Format

The first line of the input consists of integers NN and QQ, the number of elements in the array and the number of queries. 
The next line contains NN space separated integers, the elements of the array AA. The descriptions of the QQ queries follow.
The first line of each query consists of integers XX and MM, the integer XX and the number of indices that cannot be erased.
The last line of each query consists of MM space separated integers BjBj denoting that the elements ABjABj cannot be erased. Note that, this line is omitted if M=0M=0.

Output Format
Print QQ lines, the answers to each of the queries.
For each query, print -1 if it is impossible to get an OR of at most XX. Otherwise, print the maximum number of remaining elements.
Constraints

1≤N≤2⋅1051≤N≤2⋅105
0≤M≤N0≤M≤N
1≤Q≤2⋅1051≤Q≤2⋅105
0≤Ai,X<2200≤Ai,X<220
1≤Bj<Bj+1≤N1≤Bj<Bj+1≤N, ∀j∀j such that 1≤j<M1≤j<M
Sum of MM over all queries does not exceed 2⋅1052⋅105.

Subtasks

Subtask 1 (40 points): Q=1,M=0Q=1,M=0.
Subtask 2 (60 points): No additional constraints.


                        Sample Input 1
                        





3 1
4 3 5
6 0



                        Sample Output 1
                        





2


Explanation
The given array A=[4,3,5]A=[4,3,5]. In binary representation, A=[1002,0112,1012]A=[1002,0112,1012].  We are given that the size of array 
BB is 00. Thus, we can delete any element of the array AA.  

Erase 00 elements: The remaining array A=[1002,0112,1012]A=[1002,0112,1012]. Bitwise OR of the remaining elements is 10021002 || 01120112 || 1012=1112=71012=1112=7. Since X<7X<7, we have to erase some elements of the array.
Erase 11 element: If we erase the element at index 22, the remaining array A=[1002,1012]A=[1002,1012]. Bitwise OR of the remaining elements is:
10021002 || 1012=1012=51012=1012=5. Since X≥5X≥5, all the required conditions are satisfied.

Thus, the maximum number of remaining elements is 22.

                        Sample Input 2
                        





5 2
14 8 11 6 3
14 1
4
3 2
2 4



                        Sample Output 2
                        





3
-1


Explanation
The given array A=[14,8,11,6,3]A=[14,8,11,6,3]. In binary representation, A=[11102,10002,10112,01102,00112]A=[11102,10002,10112,01102,00112].

Query 11: We are given that the element at index 44 cannot be erased.
A possible way to satisfy the given conditions is to erase the elements at indices 33 and 55. Thus, the remaining array would be A=[11102,10002,01102]A=[11102,10002,01102]. The bitwise OR of remaining elements would be 1414 which is less than equal to XX.
It can be proven that the maximum number of remaining elements cannot exceed 33.
Query 22: We are given that the elements at indices 22 and 44 cannot be erased. In the worst case that we erase all other elements, we are left with [10002,01102][10002,01102]. The bitwise OR of these elements is 11102=14>311102=14>3. Thus, it is impossible to erase some elements leaving an OR of at most 33.




Author:
6★ashishgup


Editorial:
https://discuss.codechef.com/problems/SQUEEZE


Tags:

               
                 ashishgup, dynamic-programming, medium, start30
                 
               
             
             



                        Difficulty Rating:
                    

3011


Date Added:
12-03-2022


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

