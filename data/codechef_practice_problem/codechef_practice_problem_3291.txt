
For an array BB consisting of distinct integers, its number of inversions is equal to the number of pairs (i,j)(i,j) with 1≤i<j≤M1≤i<j≤M such that Bi>BjBi>Bj, where MM is the size of BB. If this number is odd, we will call array BB odd. Otherwise, we will call it even.
Let's call a permutation PP of integers from 11 to KK good, if there exists a way to split it into two subsequences, each of which is odd.
For example, we can split [5,1,3,2,6,4][5,1,3,2,6,4] into subsequences [5,3,2][5,3,2] and [1,6,4][1,6,4], both of which are odd. There is no such split for the permutation [1,2,4,3,5,6][1,2,4,3,5,6].
For each KK from 11 to NN, find the number of permutations of integers from 11 to KK, which are good. As this number may be very high, output each number modulo some prime PP.
Input Format

The only line of the input contains two integers N,PN,P.

Output Format
Print NN space-separated integers, the KthKth of which is the number of permutations of integers from 11 to KK which are good. Output all values modulo PP.
Constraints

1≤N≤1061≤N≤106
108≤P≤109108≤P≤109
PP is prime


                        Sample Input 1
                        





6 998244353



                        Sample Output 1
                        





0 0 0 12 95 671 





Author:
trygub_adm


Editorial:
https://discuss.codechef.com/problems/ODDSPLIT


Tags:

               
                 ltime107, ltime107, medium-hard, medium-hard, trygub_adm
                 
               
             
             



                        Difficulty Rating:
                    

3391


Date Added:
15-04-2022


Time Limit:
2 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

