
Read problems statements Mandarin , Bengali , Hindi , Russian and Vietnamese as well.
You are given a string ss with length NN describing a row of cells numbered 11 through NN. Each character of this string is either a digit ('0' through '9', inclusive) or a dot ('.'). For each ii (1≤i≤N1≤i≤N), if the ii-th character of ss is '.', the ii-th cell is empty; if this character is the digit dd, the ii-th cell contains a robot that is able to move in a fixed range — between cells max(1,i−d)max(1,i−d) and min(N,i+d)min(N,i+d) inclusive.
When you start a robot and provide it with a direction (left or right), it starts moving in that direction. In one step, a robot can move one cell to the left or right. The robot keeps moving in the chosen direction until it reaches the last cell in its range, at which point it starts moving in the opposite direction (this may happen before the robot's first step, in which case it immediately starts moving in the opposite direction) until it reaches the other end of its range, when it again reverses direction and keeps moving, etc. This way, a lone robot would move forever. Assume that a robot can turn around instantly.
You are a robot operator. You want to determine an initial direction for each robot (either to the left or to the right, not necessarily the same for each robot) in such a way that after they are all started at the same time, a collision between two robots never happens, no matter how long they keep moving. A collision between two robots happens if they occupy the same cell in some step. Note that the robots are allowed to cross each other's paths, i.e. a collision does not happen if there are two robots in cells xx and x+1x+1 in some step, but in the next step, the robot from cell xx moves to cell x+1x+1 and the robot from cell x+1x+1 moves to cell xx.
Find out if it is possible to assign initial directions to robots in such a way.
Input

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first and only line of each test case contains a single string ss.

Output
For each test case, print a single line containing the string "safe" if a valid assignment of directions exists or "unsafe" otherwise (without quotes).
Constraints

1≤T≤5∗1041≤T≤5∗104
1≤N≤5∗1041≤N≤5∗104
ss contains only characters '.' and '0' through '9'
the sum of NN over all test cases does not exceed 3∗1053∗105

Subtasks
Subtask #1 (30 points): 

1≤T≤1021≤T≤102
1≤N≤1021≤N≤102
The sum of NN over all test cases does not exceed 3∗1023∗102

Subtask #2 (70 points): original constraints

                        Sample Input 1
                        





3
1.1
2..1.
1..2



                        Sample Output 1
                        





unsafe
safe
safe


Explanation
Example case 1: Whatever directions you provide to the robots, they will both move to cell 22 in the first step.
Example case 2: If both robots are directed to the right, they will never collide with each other.
Example case 3: Whatever directions you provide to the robots, they will keep crossing each other's paths, but will never collide.



Author:
admin2


Editorial:
https://discuss.codechef.com/problems/ROBAGAIN


Tags:

               
                 2 SAT, LCM, Strongly Connected Components, Implementation
                 
                     
                     Advanced Algorithms, Mathematics, Number Theory, Algorithms, Graph Algos
                 
               
             
             



                        Difficulty Rating:
                    

2800


Date Added:
25-10-2018


Time Limit:
2.5 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

