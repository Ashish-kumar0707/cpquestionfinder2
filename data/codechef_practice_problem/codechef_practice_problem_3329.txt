
Read problems statements in Mandarin chinese, Russian and Vietnamese as well.
Be careful!!! You are not allowed to submit this problem more than 99 times!
Chef has NN randomly generated points with integer coordinates (x1,y1),(x2,y2),…,(xN,yN)(x1,y1),(x2,y2),…,(xN,yN). He asks you to perform the following operation:

choose up to KK of these points, i.e. a subsequence {(xki,yki)}Li=1{(xki,yki)}i=1L, where 0≤L≤K0≤L≤K
for each 1≤i≤L1≤i≤L, choose a vector (dxi,dyi)(dxi,dyi) with integer coordinates such that dx2i+dy2i≤R2dxi2+dyi2≤R2
add (dxi,dyi)(dxi,dyi) to (xki,yki)(xki,yki), i.e. change (xki,yki)(xki,yki) to (xki+dxi,yki+dyi)(xki+dxi,yki+dyi), for each valid ii

The resulting NN points must be pairwise distinct.
Afterwards, you must find a hull containing all NN points. The hull must be a simple polygon and no three consecutive points on it may lie on the same line, but it does not have to be convex. You should minimise the area of this hull.
Input

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows. 
The first line of each test case contains three space-separated integers NN, KK and RR.
For each ii (1≤i≤N1≤i≤N), the ii-th of the following NN lines contains two space-separated integers xixi and yiyi. 

Output
For each test case, print N+2N+2 lines.
The first line should contain a single integer MM — the number of points on the hull. The second line should contain MM space-separated integers b1,b2,…,bMb1,b2,…,bM — the indices of points on the hull in the order in which they appear on its perimeter (in either direction). The following NN lines should describe the final coordinates of all points; for each valid ii, the ii-th of these lines should contain two space-separated integers — the coordinates of the ii-th point.
Your answer must satisfy the following conditions:

3≤M≤N3≤M≤N
the indices b1,b2,…,bMb1,b2,…,bM are pairwise distinct
1≤bi≤N1≤bi≤N for each valid ii
no three consecutive points on the hull lie on the same line
there are no more than KK points whose positions on the output are different from their initial positions
for each valid pair i,ji,j (i≠ji≠j), xi≠xjxi≠xj or yi≠yjyi≠yj — all points on the output are pairwise distinct
all NN points are inside or on the perimeter of the hull
the hull is a simple polygon — no two non-consecutive edges intersect or touch

Constraints

T=100T=100
N∈[50,100,200]N∈[50,100,200]
1≤K≤101≤K≤10
1≤R≤10,0001≤R≤10,000
|xi|,|yi|≤105|xi|,|yi|≤105 for each valid ii
all points on the input are pairwise distinct

Example Input
2
6 1 4
0 0
2 0
2 2
0 2
1 0
1 1
6 1 4
0 0
2 0
2 2
0 2
1 0
1 1

Example Output
6
4 1 5 6 2 3
0 1
2 0
2 2
0 2
1 0
1 1
4
1 2 3 4
0 0
2 0
2 2
0 2
1 0
1 1

Explanation
Note that T≠100T≠100 in the example for clarity; in all real test files, T=100T=100.
Example case 1: We have N=6N=6 points (0,0),(0,2),(1,1),(1,0),(2,0),(2,2)(0,0),(0,2),(1,1),(1,0),(2,0),(2,2). We can only perform the operation described in the statement with K=1K=1 point. If we had R≥5R≥5, we could change the point (2,2)(2,2) to (2−2,2−1)=(0,1)(2−2,2−1)=(0,1) and obtain a set of distinct points (0,0),(0,1),(0,2),(1,1),(1,0),(2,0)(0,0),(0,1),(0,2),(1,1),(1,0),(2,0); this set has a hull on M=3M=3 points (0,0),(0,2),(2,0)(0,0),(0,2),(2,0). However, for R=4R=4, we can't move (2,2)(2,2) to (2−1,2−1)(2−1,2−1), since there is a point (1,1)(1,1), so the points would not be distinct.
Therefore, we move (0,0)(0,0) to (0+0,0+1)=(0,1)(0+0,0+1)=(0,1). Afterwards, we can build a hull on all six points in the order (0,2),(0,1),(1,0),(1,1),(2,0),(2,2)(0,2),(0,1),(1,0),(1,1),(2,0),(2,2).
The area of this hull and the score for this output is 33.
Example case 2: The same input, a different output with score 44.
Scoring
Your score for each test case is the area of the resulting hull. Your score for each test file is the sum of scores for all test cases. (For the above example, the score you would obtain is 33+44=77.)
Test Generation Process
There are twenty test files. All test files are generated in the same way. During the contest, the displayed score will account for exactly two test files, i.e. your score reflects your submission's performance on 10% (1/10) of the test files. However, if your program gets a non-AC verdict on any test file, your submission's verdict will be non-AC. In other words, an AC verdict denotes that your program runs successfully on all the test files. After the end of the contest, your score will be changed to the sum of your program's scores over all test files.
The pseudocode used for generating the tests is given below. Assume that the function rnd.next(l, r) generates a random number uniformly in the range ll through rr (both inclusive) and rnd.shuffle(p) randomly shuffles all elements in pp.
T := 100
Ns := []
for i := 1 to 60:
    Ns.append(50)
for i := 1 to 30:
    Ns.append(100)
for i := 1 to 10:
    Ns.append(200)
rnd.shuffle(Ns)
for i := 1 to 100:
    N := Ns[i - 1]
    K := rnd.next(1, 10)
    R := rnd.next(1, 10000)
    Points := []
    while size(Points) is less than N:
        X := rnd.next(-100000, 100000)
        Y := rnd.next(-100000, 100000)
        if (X, Y) not in Points:
            Points.append((X, Y))




Author:
6★mgch


Editorial:
https://discuss.codechef.com/problems/NONCONVX


Tags:

               
                 mgch
                 
               
             
             



                        Difficulty Rating:
                    

3510


Date Added:
23-04-2018


Time Limit:
5 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

