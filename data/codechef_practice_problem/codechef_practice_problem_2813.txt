
There's a tree and every one of its nodes has a cost associated with it. Some of these nodes are labelled special nodes. You are supposed to answer a few queries on this tree. In each query, a source and destination node (SNODESNODE and DNODEDNODE) is given along with a value WW. For a walk between SNODESNODE and DNODEDNODE to be valid you have to choose a special node and call it the pivot PP. Now the path will be SNODESNODE ->PP -> DNODEDNODE. For any valid path, there is a path value (PVPV) attached to it. It is defined as follows:
Select a subset of nodes(can be empty)  in the path from SNODESNODE to PP (both inclusive) such that sum of their costs (CTOT1CTOT1) doesn't exceed WW.
Select a subset of nodes(can be empty) in the path from PP to DNODEDNODE (both inclusive) such that sum of their costs (CTOT2CTOT2) doesn't exceed WW.
Now define PV=CTOT1+CTOT2PV=CTOT1+CTOT2 such that the absolute difference  x=|CTOT1−CTOT2|x=|CTOT1−CTOT2| is as low as possible. If there are multiple pairs of subsets that give the same minimum absolute difference, the pair of subsets which maximize PVPV should be chosen.
For each query, output the path value PVPV minimizing xx as defined above. 
Note that the sum of costs of an empty subset is zero.
Input

First line contains three integers NN - number of vertices in the tree, NSPNSP - number of special nodes in the tree and QQ - number of queries to answer.   
Second line contains N−1N−1 integers. If the iith integer is ViVi then there is an undirected edge between i+1i+1 and ViVi (ii starts from 11 and goes till N−1N−1).          
Third line contains NN integers, the iith integer represents cost of the iith vertex.    
Fourth line contains NSPNSP integers - these represent which nodes are the special nodes.    
Following QQ lines contains three integers each - SNODESNODE, DNODEDNODE and WW for each query.

Output
For each query output a single line containing a single integer - the path value PVPV between SNODESNODE and DNODEDNODE.
Constraints:

1≤1≤ Number of nodes ≤1000≤1000 
0≤W≤10000≤W≤1000 
1≤1≤ Number of special nodes ≤10≤10 
0≤0≤ Cost of each node ≤1000≤1000 
1≤1≤ Number of queries ≤1000≤1000

Sample Input
7 1 5
1 1 2 2 3 3
3 5 4 2 7 9 1
1
2 3 100
1 1 100
2 1 100
4 5 100
4 7 100      
Sample Output:
6
6
6
20
16       
Explanation:
Consider query 44. The only path is 4−>2−>1−>2−>54−>2−>1−>2−>5. The two sets defined for this path are {3,2,53,2,5} and {3,5,73,5,7}. Pick subsets {3,2,53,2,5} and {3,73,7} from each set which minimizes PVPV. Note that node 22 can repeat as it is in different paths (both to and from the pivot).



Author:
5★vishal_nnd0


Tags:

               
                 DFS
                 
                     
                     Algorithms, Graph Algos, Traversals
                 
               
             
             



                        Difficulty Rating:
                    

2885


Date Added:
17-04-2019


Time Limit:
2 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

