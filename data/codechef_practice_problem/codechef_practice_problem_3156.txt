
Read problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
There is a hidden undirected connected graph GG with nn nodes and mm edges numbered 0,1,…m−10,1,…m−1, and a hidden permutation p0,p1,…,pm−1p0,p1,…,pm−1 of edges. The graph doesn't contain any self loops or multiple edges.
You only know the value of nn and mm. You can ask queries. In one query, you give the judge a vector w=[w0,w1,…,wm−1]w=[w0,w1,…,wm−1] of size mm consisting of integers in the range [1,m][1,m]. The judge returns n−1n−1 integers e0,e1,…,en−2e0,e1,…,en−2, such that the edges numbered e0,e1,…,en−2e0,e1,…,en−2 form a minimum spanning tree of the graph, if the edge numbered pipi had a weight wiwi for each i=0,1,…m−1i=0,1,…m−1. Note that the judge can print the edges in any order, and if there are multiple minimum spanning trees, the judge may print any one of them.
You need to find the hidden permutation in at most mm queries, or claim that it can't be found uniquely no matter how many queries you're allowed to make.
We have a proof that if it's possible to find the permutation in finitely many queries, then it is possible in at most mm queries.
Interaction

First, you should read a line containing the subtask number (11, 22, or 33).
Then, read the number of test cases.
For each test case, first read the values of nn and mm.
To make a query, you should output a question mark, followed by mm space-separated integers denoting the weights:  ?w0w1…wm−1?w0w1…wm−1.
If the query format is incorrect, or if some weight exceeds mm, or the number of queries (including this query) has exceeded mm, the judge prints a single integer −1−1 and quits with a wrong answer verdict. In this case, you must also terminate your program.
Otherwise, the judge prints n−1n−1 space-separated integers : e0e1…en−2e0e1…en−2.
If you have found the permutation pp, you should output an exclamation mark followed by mm space-separated integers :  !p0p1…pm−1!p0p1…pm−1. Else, if you have reached the conclusion that the hidden permutation pp can not be found, print exclamation mark followed by −1−1 : !−1!−1.
If your answer is incorrect, the judge prints−1−1 and exits. In this case, you must terminate your program as well. Else, the judge prints 11, and you should move to the next testcase(if any).

Note that whenever the judge prints −1−1, you should immediately terminate your program to receive a Wrong Answer verdict; otherwise, you may receive any verdict. Don't forget to flush the output after printing each line!
Constraints

1≤m≤10001≤m≤1000
The sum of mm over all test cases doesn't exceed 10001000.

Subtasks

Subtask 1(8 points) : GG is a tree
Subtask 2(21 points) : GG is a cycle
Subtask 3(71 points) : No additional constraints.

Example
In this example, the hidden graph has edges (0,1)(0,1), (1,2)(1,2) and (2,0)(2,0) numbered 0,1,20,1,2 respectively, in all testcases. In the first testcase, p=[2,0,1]p=[2,0,1] and in the second, p=[0,1,2]p=[0,1,2]. The third testcase shouldn't be read as the judge prints −1−1 in testcase 22.
You                     Grader
                        2           # Subtask 2
                        3           # 3 testcases
                        3 3         # n = 3, m = 3
? 2 3 2
                        2 1         # The permuted weights would be [3, 2, 2]
? 2 3 2
                        1 2         # For the  same vector w, judge's output can be different.
! 2 0 1
                        1           # Correct output. Note that this is merely a lucky guess

                        3 3         # Next testcase, n = 3, m = 3
? 2 2 1
                        0 2
! 1 0 2
                        -1          # Incorrect output! Judge exits now.
You should also
terminate here.




Author:
7★jtnydv25


Editorial:
https://discuss.codechef.com/problems/INTMST


Tags:

               
                 Graphs, Interactive Problems, Bridges, Minimum Spanning Trees
                 
                     
                     Data Structures, Special, Advanced Algorithms, Advanced Graph Algos, Connected Components, Algorithms, Graph Algos, Tree Algos
                 
               
             
             



                        Difficulty Rating:
                    

3146


Date Added:
27-05-2021


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

