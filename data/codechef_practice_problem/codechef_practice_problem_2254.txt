
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
There is a rooted binary tree with NN nodes. For each node with exactly two children, one of them is called the left child and the other is called the right child. If a node has only one child, it is still specifically called either the left child or the right child.
The nodes are labelled 11 through NN according to the inorder traversal of the tree. That is, the labelling can be generated by the following pseudocode:
integer index = 1

function dfs(node n):
    if n has left_child:
        dfs(n.left_child)
    n.label = index
    index += 1
    if n has right_child:
        dfs(n.right_child)

run dfs(root)

For each node xx, the subtree of this node consists of the node xx itself and all its (direct or indirect) descendants. Since the nodes are labelled according to inorder traversal, the subtree of node xx can be described by two integers axax and bxbx in the following way: the nodes ax,ax+1,…,bxax,ax+1,…,bx all belong to the subtree of node xx and all other nodes do not belong to this subtree.
You do not know the structure of the tree. You would like to reconstruct it by asking questions in the form: "Is axax equal to aa and also bxbx equal to bb?" You may ask at most 300300 such questions. Find the root and the parent of each non-root node.
Interaction

First, you should read a line containing a single integer TT — the number of test cases. The description of interaction for TT test cases follows.
For each test case, you should start by reading a line containing a single integer NN.
Afterwards, you may ask questions. To ask a question, print a line containing the character 'Q' followed by a space and three space-separated integers xx, aa and bb (1≤x≤N1≤x≤N, 1≤a≤x≤b≤N1≤a≤x≤b≤N). Then, you should read a line containing the string "Yes" if aa is equal to axax and bb is equal to bxbx or "No" otherwise.
When you are ready to answer, print a line containing the character 'A' followed by a space and NN space-separated integers p1,p2,…,pNp1,p2,…,pN. For each valid ii, pipi should denote the parent of the ii-th node or, if the ii-th node is the root, it should be −1−1. Your answer will be considered correct if it exactly describes the hidden tree.

Don't forget to flush the output after printing each line!
Constraints

1≤T≤1001≤T≤100

Subtasks
Subtask #1 (20 points): 1≤N≤101≤N≤10
Subtask #2 (20 points): 1≤N≤201≤N≤20
Subtask #3 (30 points): 1≤N≤501≤N≤50
Subtask #4 (30 points): 1≤N≤1001≤N≤100
Example Input
Grader  | You
2       |
2       |
        | Q 1 1 2
No      |
        | A 2 -1
5       |
        | Q 4 1 5
Yes     |
        | Q 1 1 4
No      |
        | Q 3 1 3
Yes     |
        | Q 1 1 2
Yes     |
        | A 3 1 4 -1 4

Explanation
Example case 1: The tree has only two nodes — node 22 is the root and node 11 is its left child. In this case, we have a1=1a1=1, b1=1b1=1, a2=1a2=1 and b2=2b2=2. First, we ask if the subtree of node 11 subtree contains the nodes 11 and 22. The answer is "No", so we know that node 22 is the root and node 11 is its child, which is what we needed to find out.
Example case 2: In the first question, we ask if nodes 11 through 55 are all in the subtree of node 44. In this case, the answer is "Yes", so we know that node 44 is the root of the whole tree. We still need to ask more questions to determine how nodes 11, 22, 33 and 55 are connected to it.



Author:
7★lg5293


Editorial:
https://discuss.codechef.com/problems/FGTREE


Tags:

               
                 Stacks, Binary Tree, Observation
                 
                     
                     Data Structures, Tree Data Structure, Algorithms
                 
               
             
             



                        Difficulty Rating:
                    

2557


Date Added:
9-05-2019


Time Limit:
3 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

