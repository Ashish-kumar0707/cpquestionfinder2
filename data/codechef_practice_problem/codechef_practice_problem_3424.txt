
Read problem statements in Mandarin, Bengali, Russian, and Vietnamese as well.
There is a grid with NN rows and MM columns. There are KK cannons (numbered 11 through KK) placed in KK cells of this grid. Each cannon can fire a ball to any cell whose Manhattan distance from the cannon does not exceed the strength of the cannon (including the cell with the cannon). Initially (at the 00-th second), the strengths of all the cannons are 00 and they increase by 11 every second. Starting at the 00-th second, cannons start throwing balls according to the following rules: 

At each second, exactly one cannon fires one ball to a cell which does not contain any balls yet. (Note that at least one such cell exists for each cannon unless the grid is full.)
The same cannon may fire during multiple seconds.
When a ball is fired by a cannon at the ii-th second, the number ii gets printed on the cell the ball lands in.

At the end of the N⋅M−1N⋅M−1 th second, the grid will be representing a permutation of the integers 00 through N⋅M−1N⋅M−1. (Two permutations P1P1 and P2P2 are different if at least one cell has different numbers printed on it in P1P1 and P2P2.)
A permutation is considered to be good if it can be formed at the end of the N⋅M−1N⋅M−1 
th second in the given process.
Your task is to find the fraction of permutations that are good, i.e. the number of good permutations divided by the number of all permutations of 00 through N⋅M−1N⋅M−1. Let's denote this fraction by P/QP/Q, where PP and QQ are positive integers and QQ is coprime with 2,500,000,0012,500,000,001. You should compute P⋅Q−1P⋅Q−1 modulo 2,500,000,0012,500,000,001, where Q−1Q−1 denotes the multiplicative inverse of QQ modulo 2,500,000,0012,500,000,001.
Note: The Manhattan distance between a cell in row r1r1 and column c1c1 and a cell in row r2r2 and column c2c2 is |r1−r2|+|c1−c2||r1−r2|+|c1−c2|.
Input Format

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains three space-separated integers NN, MM and KK.
KK lines follow. For each valid ii, the ii-th of these lines contains two space-separated integers RiRi and CiCi — the row and column where the ii-th cannon is located.

Output Format
For each test case, print a single line containing one integer P⋅Q−1P⋅Q−1 modulo 2,500,000,0012,500,000,001.
Constraints

1≤T≤1,0001≤T≤1,000
1≤N,M≤50,0001≤N,M≤50,000
1≤K≤min(N⋅M,1,000)1≤K≤min(N⋅M,1,000)
1≤Ri≤N1≤Ri≤N for each valid ii
1≤Ci≤M1≤Ci≤M for each valid ii
the sum of KK over all test cases does not exceed 1,0001,000
the sum of NN over all test cases does not exceed 107107
the sum of MM over all test cases does not exceed 107107

Subtasks
Subtask #1 (30 points): 

1≤N⋅M≤1061≤N⋅M≤106
The sum of N⋅MN⋅M over all test cases does not exceed 106106

Subtask #2 (70 points): original constraints

                        Sample Input 1
                        





3
2 2 2
1 1
2 2
2 2 4
1 1
1 2
2 1
2 2
1 2 1
1 1



                        Sample Output 1
                        





1250000001
1
1250000001





Author:
4★vanshkaul


Editorial:
https://discuss.codechef.com/problems/MATPERM


Tags:

               
                 Difference Arrays, Permutations & Combinations, Sorting, Prefix Sum, Manhattan Distance
                 
                     
                     Data Structures, Arrays, Mathematics, Combinatorics, Algorithms, Simple Algos
                 
               
             
             



                        Difficulty Rating:
                    

3933


Date Added:
29-07-2021


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

