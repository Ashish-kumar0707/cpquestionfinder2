
Chef has NN decimal strings S1,S2,…,SNS1,S2,…,SN with him (that is, each of these strings contains only characters '0' through '9'). The characters in all strings are indexed starting from 11. Chef wants to form a single long string WW by interleaving all these strings.
A string WW is said to be formed by interleaving S1,S2,…,SNS1,S2,…,SN if the characters of WW can be partitioned into NN subsequences T1,T2,…,TNT1,T2,…,TN such that for each valid ii, TiTi is identical to the string SiSi. Formally, for each valid ii, the subsequence TiTi must have length |Si||Si|; let's denote Ti=(Ti,1,Ti,2,…,Ti,|Si|)Ti=(Ti,1,Ti,2,…,Ti,|Si|), where 1≤Ti,j≤N1≤Ti,j≤N and Ti,j<Ti,j+1Ti,j<Ti,j+1 for each valid jj. Each integer between 11 and |W|=|S1|+|S2|+…+|SN||W|=|S1|+|S2|+…+|SN| inclusive must occur in exactly one of these subsequences, and for each valid ii and jj, the Ti,jTi,j-th character of WW must be identical to the jj-th character of SiSi. For example, if S1S1 is "123", S2S2 is "456" and S3S3 is "789", then the strings "124758963" and "123456789" are formed by interleaving these strings, but "123456798" is not.
The cost of the interleaved string WW is defined as ∑|W|i=2|Wi−Wi−1|2∑i=2|W||Wi−Wi−1|2, where WiWi denotes the integer represented by the ii-th character of WW. For example, if WW is "124", then its cost is |2−1|2+|4−2|2=1+4=5|2−1|2+|4−2|2=1+4=5.
Chef wants you to find an interleaved string WW. The cost of this string should be as low as possible.
Input

The first line of the input contains a single integer NN.
NN lines follow. For each ii (1≤i≤N1≤i≤N), the ii-th of these lines contains a single string SiSi.

Output

Print a single line containing |W|=|S1|+|S2|+…+|SN||W|=|S1|+|S2|+…+|SN| space-separated integers. For each valid ii, the ii-th of these integers (let's denote it by xx) should denote that the ii-th character of your interleaved string comes from the string SxSx.
Your output will be considered valid if for each ii (1≤i≤N1≤i≤N), your output contains the integer ii exactly |Si||Si| times.

Constraints

N=10,000N=10,000
|Si|=100|Si|=100 for each valid ii
S1,S2,…,SNS1,S2,…,SN contain only decimal digits, i.e. characters '0' through '9'

Scoring
The score of each test case (and therefore each test file) is the cost of the string WW described by your output, i.e. ∑|W|i=2|Wi−Wi−1|2∑i=2|W||Wi−Wi−1|2. The score of a submission is the sum of scores of all test files. Your goal is to minimise the score of your submission.
If your output is invalid, the verdict of your submission will be Wrong Answer.
There are twenty test files - ten of each type described below. During the contest, the displayed score will account for exactly four test files, i.e. your score reflects your submission's performance on 20% (4/20) of the test files, two for each of the types described below. However, if your program gets a non-AC verdict on any test file, your submission's verdict will be non-AC. In other words, an AC verdict denotes that your program runs successfully on all the test files. After the end of the contest, your score will be changed to include the sum of your program's scores over the other sixteen test files.
Example Input
3
123
456
789

Example Output
1 1 2 3 2 3 3 2 1

Explanation
The output corresponds to the string "124758963". The score for this test file would be the cost of this string, which is 4646.
Test Generation Process
There are two types of test files.
Type 1: Each character of each string is chosen uniformly randomly from the set {'0', '1', …, '9'}.
Type 2: Each character of each string is chosen randomly from the set {'0', '1', …, '9'}. The probability of '0' being chosen is 0.40.4, the probability of '1' being chosen is also 0.40.4 and the probability of each of the remaining 8 characters being chosen is 0.0250.025.



Author:
admin3


Tags:

               
                 admin3
                 
               
             
             



                        Difficulty Rating:
                    

3627


Date Added:
5-03-2019


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

