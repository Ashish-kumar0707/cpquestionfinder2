
Read problem statements in Mandarin and Russian.
Roger wants to start a cloud computing company. First, he went to some companies to promote his cloud computing system and NN of them (numbered 11 through NN) showed interest. Each of these NN clients has one task, which consists of a number of processes that needs to be executed every second. Let's denote the number of processes for the ii-th client by DiDi.
Roger, happy to have a bunch of clients, went to buy a server for his system. Unfortunately, there are QQ different servers on sale (numbered 11 through QQ), but Roger can only afford one. For each valid ii, Roger knows that the ii-th server's performance is described by two integers CiCi and PiPi with the following meaning:

Let's split a second into PiPi equal time segments.
The server has CiCi cores. During each time segment, each core may execute a process or do nothing.
During each second, each process must be executed exactly once ― by exactly one core during exactly one time segment.
If two processes belong to the same task, they may not be executed by different cores during the same time segment due to synchronisation issues.
Processes that belong to the same task do not have to be executed by the same core or in any particular order. They also do not have to be executed during contiguous time segments.

Since tasks can be extreme sometimes, all the servers are equipped with a new technology named Exclusive Processing. Initially, we may choose one task which should run in exclusive processing mode (since it demands a lot of power). Then, instead of executing one process, each core may execute two processes belonging to this task during any time segment. Executing just one process belonging to this task during one time segment is also allowed. However, it is still not allowed for different cores to execute processes belonging to the same task during the same time segment.
Now Roger needs your help. For each server, he wants to know the number of subsets of the NN clients that can be served by this server. Since these numbers can be very large, compute them modulo 987,654,319987,654,319.
Input

The first line of the input contains two space-separated integers NN and QQ.
The second line contains NN space-separated integers D1,D2,…,DND1,D2,…,DN.
QQ lines follow. For each ii (1≤i≤Q1≤i≤Q), the ii-th of these lines contains two space-separated integers CiCi and PiPi.

Output
For each server, print a single line containing one integer ― the number of subsets it can serve modulo 987,654,319987,654,319.
Constraints

1≤N≤6001≤N≤600
1≤Q≤360,0001≤Q≤360,000
1≤Di≤6001≤Di≤600 for each valid ii
1≤Ci≤6001≤Ci≤600 for each valid ii
1≤Pi≤360,0001≤Pi≤360,000 for each valid ii

Subtasks
Subtask #1 (50 points):

N,Q≤50N,Q≤50
Di≤50Di≤50 for each valid ii
Ci,Pi≤50Ci,Pi≤50 for each valid ii

Subtask #2 (50 points): original constraints

                        Sample Input 1
                        





6 5
8 2 5 3 6 2
1 6
2 4
2 3
4 1
4 2



                        Sample Output 1
                        





19
27
16
3
8





Author:
7★kmaaszraa


Editorial:
https://discuss.codechef.com/problems/SRVR


Tags:

               
                 Dynamic Programming
                 
                     
                     Algorithms
                 
               
             
             



                        Difficulty Rating:
                    

2891


Date Added:
30-11-2019


Time Limit:
4 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

