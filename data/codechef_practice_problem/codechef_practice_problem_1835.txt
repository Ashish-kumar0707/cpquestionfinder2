
Maui had an undirected connected graph G=(V,E)G=(V,E), where VV = {v1,v2,…,vNv1,v2,…,vN} and EE is the edge set. He also had a list of positive non-zero integers a1,a2,…,aNa1,a2,…,aN. He was bored of his usual adventures and decided to build a new directed graph G′=(U,F)G′=(U,F). UU = {u1,u2,…,uNu1,u2,…,uN} and (ui,uj)∈F(ui,uj)∈F if and only if there is a walk of length exactly aiai from vivi to vjvj in GG. Note that this walk could repeat edges. He then noticed that the new directed graph G′G′ had two vertices uiui and ujuj , such that there was no path from uiui to ujuj in G′G′. Note that there could be more such pairs of vertices.
But now, Maui has lost his list of integers, and has only the graph GG. Help him by constructing any list which would satisfy the property mentioned, or state that it cannot be done.
Input:

The first line of the input contains two integers: N,MN,M, which represent the number of nodes and edges in GG respectively.
The i-th of the next MM lines contains two numbers ii and jj, which signify that the undirected edge (vi,vj)(vi,vj) exists in GG.

Output:

If a list of integers which satisfies the property exists, print "YES" in the first line and the NN integers in order in the second line. Each of the integers must satisfy 1≤ai≤1091≤ai≤109.
If it does not exist, print "NO".

Constraints

2≤N≤1002≤N≤100
1≤M≤N∗(N−1)21≤M≤N∗(N−1)2
1≤i,j≤N1≤i,j≤N
The input graph will be connected.
There will be no multi-edges or self-loops.

Subtasks

19 points : 2≤N≤152≤N≤15
5 points : The input graph will be bi-partite.
76 points : No further constraints.

Sample Input:
3 2
1 2
2 3

Sample Output:
YES
2 1 2

Explanation:
In our output, a1=2a1=2, and so there will be a direct edge from u1u1 to u2u2 if and only if there is a walk of length 2 between v1v1 and v2v2. But there isn't any such walk. But there is a walk of length 2 between v1v1 and v3v3, and so there is a direct edge from u1u1 to u3u3 in G′G′. Similarly you can check that the edge set of G′G′ is {(u1,u3),(u3,u1),(u2,u1),(u2,u3)(u1,u3),(u3,u1),(u2,u1),(u2,u3)}. Now notice that there is no path from u1u1 to u2u2 in G′G′. Hence this is a valid output.



Author:
admin3


Tags:

               
                 admin3
                 
               
             
             



                        Difficulty Rating:
                    

2312


Date Added:
24-06-2018


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

