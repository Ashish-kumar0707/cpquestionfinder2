
Read problem statements in Mandarin, Bengali, Russian, and Vietnamese as well.
Chef has failed miserably in several cooking competitions, which makes him think that he's been out of luck recently. Therefore, he decided to build a magic circle using his NN chopsticks (numbered 11 through NN), hoping that it would somehow improve his luck.
The magic circle consists of NN chopsticks placed on an infinite straight line (so it's not actually a circle). The line is drawn on the ground and chopsticks should be stuck vertically into the ground.
The chopsticks have lengths x1,x2,⋯,xNx1,x2,⋯,xN. For each valid ii, the ii-th chopstick can be placed on the line at any integer position yiyi; then it casts a shadow on the range [yi,yi+xi][yi,yi+xi] on the line. No two chopsticks may be placed at the same position.
The positions of the chopsticks should satisfy an additional condition: for each pair of neighbouring chopsticks ii and jj (such that there are no other chopsticks between them), the distances between these neighbouring chopsticks ∣∣yi−yj∣∣|yi−yj| must fall in a given range [L,U][L,U].
The magic power of the circle depends on the total shadowed length S=∣∣⋃i[yi,yi+xi]∣∣S=|⋃i[yi,yi+xi]|. While Chef expects the circle to have the maximum effect, he must prepare for the worst-case scenario — due to his recent bad luck. Please help Chef find both the minimum and the maximum value of SS.
Input Format

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains three space-separated integers NN, LL and UU.
The second line contains NN space-separated integers x1,x2,⋯,xNx1,x2,⋯,xN.

Output Format
For each test case, print a single line containing two space-separated integers SminSmin and SmaxSmax.
Constraints

1≤T≤1051≤T≤105
1≤N≤1051≤N≤105
1≤L≤U≤1091≤L≤U≤109
1≤xi≤1091≤xi≤109 for each valid ii
the sum of NN over all test cases does not exceed 105105

Subtasks
Subtask #1 (5 points):

T≤5T≤5
N≤3N≤3

Subtask #2 (15 points):

T≤5T≤5
N≤11N≤11, and additionally N>5N>5 in at most one test case

Subtask #3 (30 points): N≤200N≤200
Subtask #4 (50 points): original constraints

                        Sample Input 1
                        





3
2 2 4
8 5
3 1 2
1 2 3
5 3 5
1 9 2 6 6



                        Sample Output 1
                        





8 12
3 6
13 22


Explanation
Example case 1:

To minimize SS, we may set y1=0y1=0 and y2=2y2=2.
To maximize SS, we may set y1=4y1=4 and y2=0y2=0.

Example case 2:

To minimize SS, we may set y1=2y1=2, y2=1y2=1 and y3=0y3=0.
To maximize SS, we may set y1=0y1=0, y2=1y2=1 and y3=3y3=3.

Example case 3:

To minimize SS, we may set y1=0y1=0, y2=3y2=3, y3=12y3=12, y4=6y4=6 and y5=9y5=9.
To maximize SS, we may set y1=0y1=0, y2=20y2=20, y3=5y3=5, y4=10y4=10 and y5=15y5=15.




Author:
ratingoverflow


Editorial:
https://discuss.codechef.com/problems/BADLUCK


Tags:

               
                 Priority Queue, Sets, ad-hoc, Sorting, Binary Search
                 
                     
                     Data Structures, Queues, Algorithms, Constructive, Searching
                 
               
             
             



                        Difficulty Rating:
                    

2843


Date Added:
29-07-2021


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

