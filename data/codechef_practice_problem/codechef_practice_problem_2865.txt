
“Animal instinct. When faced with danger, seek refuge in the herd.”
Jun-Ho has come to know about the escape passage route that VIPs use in case of emergency. Jun-Ho is in the leader's office and he is planning his escape from the building.
The building has a tree-like structure, with the leader's office as the root. Jun-Ho has obtained information on this structure, in the form of a tree on NN nodes rooted at 11. The building has some security, which can be calculated as follows:

Each node of the tree has a value assigned to it — say, AiAi for node ii.
Let uu be a leaf node of the tree. The security of uu is defined to be the bitwise OR of all values on the (unique) path from the root to uu. Let this value be denoted LuLu.
The security of the tree is then defined to be the sum of the security of all its leaf nodes, i.e, the sum of LuLu across all leaf nodes uu of the tree.

The tree is considered to be secure when Lu>0Lu>0 for every leaf node uu of the tree; otherwise it is said to be insecure.
Jun-Ho would like the security of the tree to be as low as possible when making his escape. To this end, he can perform the following operation zero or more times:

Pick a node 1≤u≤N1≤u≤N of the tree, and set Au=0Au=0.

However, if the tree ever becomes insecure as a result of an operation, the leader is immediately alerted and will foil Jun-Ho's plan. Thus, Jun-Ho cannot perform an operation that would make the tree insecure.
Help Jun-Ho find the minimum possible security the tree can have, such that the tree remains secure after every operation.
Note: 

A leaf is a node of the tree without any child nodes.
For N=1N=1, the root is also considered to be a leaf.
Given input tree will be secured tree.

Input Format

The first line of input contains a single integer TT, denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains a single integer NN, denoting the number of nodes of the tree.
The next N−1N−1 lines each contain two space-separated integers uu and vv, denoting an edge between nodes uu and vv in the tree.
The next line contains NN space-separated integers A1,A2,…,ANA1,A2,…,AN — the values of the nodes.

Output Format
For each test case, output a single integer denoting the minimum security of the tree.
Constraints

1≤T≤1031≤T≤103
1≤N≤1061≤N≤106
0≤Ai≤1090≤Ai≤109
1≤u,v≤N1≤u,v≤N
The graph given in the input will always be a secured tree
Sum of NN over all test cases does not exceed 106106.


                        Sample Input 1
                        





3
1
5
5
1 2
1 3
3 4
3 5
5 2 3 1 4
4
1 2
1 3
1 4
2 2 2 2



                        Sample Output 1
                        





5
7
6


Explanation
Test Case 1: No operation can be done, and the minimum security of the tree is thus 55.
Test Case 2: Set A1A1 and A3A3 to 00. It can be seen that L2=2L2=2, L4=1L4=1 and L5=4L5=4; so every leaf  has positive security. The security of the tree is 2+1+4=72+1+4=7, and this is the minimum attainable.

Test Case 3: The given tree already has minimum security, that being 66.



Author:
5★aman1108


Editorial:
https://discuss.codechef.com/problems/VIPS


Tags:

               
                 DFS, BFS, Observation
                 
                     
                     Algorithms, Graph Algos, Traversals
                 
               
             
             



                        Difficulty Rating:
                    

2917


Date Added:
11-12-2021


Time Limit:
2 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

