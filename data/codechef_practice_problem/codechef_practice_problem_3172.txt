
Read problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
Chef Ada constructed a simple undirected graph GG with NN vertices (numbered 11 through NN) as follows:

Start with a complete graph with KK vertices and K⋅(K−1)/2K⋅(K−1)/2 edges.
Then, add N−KN−K vertices one by one. After adding each vetex, find some clique of K−1K−1 vertices in the graph and connect the new vertex to all the vertices of that clique.

Consider NN boolean variables X1,X2,…,XNX1,X2,…,XN and their negations ¬X1,¬X2,…,¬XN¬X1,¬X2,…,¬XN, corresponding to vertices of the graph. You are given the initial values of all variables.
A CNF boolean expression is defined as a conjunction of clauses, where each clause is a disjunction of two or more elements of the set of variables and their negations.
Using the graph GG, Ada wrote a CNF boolean expression BB with MM clauses, where each clause corresponds to a clique in the graph with some (maybe none) of the variables (corresponding to vertices) negated. More formally, for each ii from 11 to MM:

Ada chose some clique in the graph, consisting of LiLi vertices Z1,Z2,…,ZLiZ1,Z2,…,ZLi
then for each valid jj, Ada chose a variable Pi,jPi,j as either XZjXZj or ¬XZj¬XZj
the ii-th clause in the expression BB had LiLi terms: Pi,1∨Pi,2∨…∨Pi,LiPi,1∨Pi,2∨…∨Pi,Li

Ada wants the expression to evaluate to "true". In order to achieve that, she may change the values of variables; for each valid ii, the cost of changing the value of XiXi (from "true" to "false" or vice versa) is CiCi. Find the minimum total cost needed to make the expression BB evaluate to "true" or determine that it is impossible.
Input

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains three space-separated integers NN, MM and KK.
The second line contains a single binary string SS with length NN describing the initial values of the variables. For each valid ii, the ii-th character of SS is '1' if XiXi is true or '0' if XiXi is false.
The third line contains NN space-separated integers C1,C2,…,CNC1,C2,…,CN.
MM lines follow. For each valid ii, the ii-th of these lines contains an integer LiLi followed by a space and LiLi space-separated integers representing the variables Pi,1,…,Pi,LiPi,1,…,Pi,Li. For each valid ii, the variable XiXi is represented by the integer ii and its negation is represented by −i−i.

Output
For each test case, print a single line containing one integer ― the minimum cost needed to make the boolean expression evaluate to "true", or −1−1 if it is impossible.
Constraints

1≤T≤101≤T≤10
1≤N,M≤1441≤N,M≤144
3≤K≤93≤K≤9
each character of SS is either '0' or '1'
1≤Ci≤2561≤Ci≤256 for each valid ii
1≤Li≤N1≤Li≤N for each valid ii
1≤|Pi,j|≤N1≤|Pi,j|≤N for each valid i,ji,j

Subtasks
Subtask #1 (25 points, time limit 1 second): K=3K=3
Subtask #2 (75 points, time limit 6 seconds): original constraints

                        Sample Input 1
                        





1
5 3 3
00001
1 4 2 3 7
3 1 -2 4
3 2 3 -5
3 1 -3 2



                        Sample Output 1
                        





3


Explanation
Example case 1: The following figure depicts the graph used to generate the expression.

The boolean expression is B=(X1∨¬X2∨X4)∧(X2∨X3∨¬X5)∧(X1∨¬X3∨X2)B=(X1∨¬X2∨X4)∧(X2∨X3∨¬X5)∧(X1∨¬X3∨X2).
One optimal solution is to change the values of X1X1 and X3X3.



Author:
7★alei


Editorial:
https://discuss.codechef.com/problems/CCNF


Tags:

               
                 Graphs, Trees, 2 SAT, Dynamic Programming, DFS
                 
                     
                     Data Structures, Advanced Algorithms, Algorithms, Graph Algos, Traversals
                 
               
             
             



                        Difficulty Rating:
                    

3160


Date Added:
2-03-2021


Time Limit:
1 - 6 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

