
JJ found a balanced parenthesis sequence. He does not like balanced parentheses so he will make the parenthesis sequence unbalanced by swapping adjacent characters in the sequence. 
JJ is lazy and wants to know minimum number of adjacent swaps required to make the given balanced parenthesis sequence unbalanced.
A parenthesis sequence is called balanced if one can turn it into a valid mathematical expression by adding characters + and 1. Sequences such as (())() and ()() are balanced whereas sequences such as ())( and )() are unbalanced.   
Input Format

The first line contains TT - the number of test cases. Then the test cases follow.
The first line of each test case contains SS - a balanced parenthesis sequence.

Output Format
For each test case, output the minimum number of adjacent swaps required to make the parenthesis sequence unbalanced.
Constraints

1≤T≤5⋅1041≤T≤5⋅104
2≤|S|≤1052≤|S|≤105
Sum of SS does not exceeds 106106 over all test cases
SS is a balanced parentheses sequence


                        Sample Input 1
                        





4
()
(())
()()
((()))(())



                        Sample Output 1
                        





1
2
1
2


Explanation

Test case 11: Swap the first and second character to get the unbalanced sequence )(.
Test case 22: Swap the second and third character first to obtain the bracket sequence ()(). Now you can swap the first and second character to obtain the sequence )(() which is unbalanced.




Author:
6★jeevanjyot


Tester:
7★aryanc403


Editorial:
https://discuss.codechef.com/problems/BREAKBAL


Tags:

               
                 String, Greedy, ad-hoc, Observation, Prefix Sum
                 
                     
                     Data Structures, Algorithms, Constructive, Simple Algos
                 
               
             
             



                        Difficulty Rating:
                    

2698


Date Added:
17-12-2021


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

