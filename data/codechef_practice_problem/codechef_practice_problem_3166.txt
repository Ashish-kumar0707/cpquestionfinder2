
Chef JJ is a fan of random events and calculating probabilities.
He designed a machine called the binary string randomizer (BSRand). BSRand takes a binary string AA (say, of length NN) as input and then generates a binary string BB (of the same length NN) as output using the following algorithm:
For each ii from 11 to NN,

Uniformly randomly choose an integer jj between 11 and NN.
Uniformly randomly choose an integer kk between 11 and NN.
Set Bi:=Aj⊕AkBi:=Aj⊕Ak (where ⊕⊕ represents the bitwise XOR operation)

Given a binary string AA, Chef JJ passes it through BSRand TT times (i.e, first he passes the binary string AA through the BSRand, then he passes the resultant binary string through BSRand again, and so on. This is done TT times in total). Calculate the probability that the final binary string obtained is BB.
You need to print the probability of getting binary string BB modulo 998244353998244353. Formally, let M=998244353M=998244353. It can be shown that the answer can be expressed as an irreducible fraction pqpq, where pp and qq are integers and q≢0(modM)q≢0(modM). Output p⋅q−1(modM)p⋅q−1(modM). In other words, output the (unique) integer xx which satisfies 0≤x<M0≤x<M and x⋅q≡p(modM)x⋅q≡p(modM).
Input Format

The first line of the input contains two integers NN and TT - the length of the binary strings AA and BB and the number of times chef JJ passes the binary string through BSRand, respectively.
The second line contains the binary string AA.
The third line contains the binary string BB.

Output Format
Output the probability of getting binary string BB from binary string AA after passing it through BSRand TT times, modulo 998244353998244353.
Constraints

1≤N≤1001≤N≤100
1≤T≤1061≤T≤106


                        Sample Input 1
                        





2 1
01
11



                        Sample Output 1
                        





748683265



                        Sample Input 2
                        





2 1
00
11



                        Sample Output 2
                        





0



                        Sample Input 3
                        





2 2
11
00



                        Sample Output 3
                        





1


Explanation
Test Case 11: For i=1i=1, we notice that the BSRand can select the following combinations of (j,k)(j,k): (1,1),(1,2),(2,1),(2,2)(1,1),(1,2),(2,1),(2,2). Out of these 44 combinations, we see that only 22 of them give 11 as result. Therefore, the probability that B1B1 becomes 11 is 1212.
For i=2i=2, similarly the the probability that B2B2 becomes 11 is 1212.
Therefore the probability that the final string is 𝟷𝟷11 is 12⋅12=14=748683265(mod998244353)12⋅12=14=748683265(mod998244353).
Test Case 22: It can be proved that there is no way to get string 𝟷𝟷11 from 𝟶𝟶00.



Author:
6★jeevanjyot


Editorial:
https://discuss.codechef.com/problems/BINSTRRAND


Tags:

               
                 Modulo Multiplicative Inverse, Matrix Exponentiation
                 
                     
                     Mathematics, Modular Arithmetic, Matrices, Matrix Multiplication
                 
               
             
             



                        Difficulty Rating:
                    

3156


Date Added:
7-12-2021


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

