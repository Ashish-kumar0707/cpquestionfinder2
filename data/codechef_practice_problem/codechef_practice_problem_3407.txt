
Read problems statements in Hindi,
Mandarin chinese
and Vietnamese as well.
Chef arrived to a mysterious land. This land consists of NN worlds (numbered 11 through NN), called ages. Chef can travel from an age to another one by the process of linking; this process is facilitated by linking books. Each linking book allows Chef to travel to a specific age from any age. There may be multiple linking books that link to the same age; all such books are indistinguishable from each other. Each linking book contains a linking panel. Whenever Chef touches the linking panel, he and everything he is carrying is instantly teleported to the age this book links to. Note that the linking book you use to teleport is not carried along with him — it remains in the current age. However, Chef can carry at most one other linking book with him when teleporting.
During his journey across the ages, Chef encountered a helpful man named Atrus. This man gave Chef a map of the current locations of all linking books. In exchange for this information, Atrus wants Chef to complete a task: for each age, the books on the map which link to this age have a list of ideal ages where they should be located; Chef should move some linking books to other ages in such a way that they are all located in ideal ages. Chef starts in age 11; help him complete Atrus' task by linking as few times as possible.
Input

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains a single integer NN.
NN lines follow. For each valid ii, the ii-th of these lines contains an integer BB denoting the number of linking books that link to age ii, followed by a space and 2B2B space-separated integers.
The first BB of these integers denote the ages where books linking to age ii are currently located. These integers are not necessarily different; if the number of some age appears among them xx times, there are xx books in that age linking to age ii.
The next BB integers denote the ages which Atrus considers ideal for these linking books. These integers are not necessarily different either; if the number of some age appears among them xx times, there should be xx books in that age linking to age ii at the end.

Output
For each test case, print a line containing one integer LL — the number of times Chef has to link to other ages in your solution. Then, print LL lines describing Chef's linking strategy. Each of these lines should contain two space-separated integers — the age Chef should link to from his current age and the linking age of the book Chef should carry (or 00 if Chef should not carry any book during this link).
Constraints

T=5T=5
30≤N≤10030≤N≤100
1≤B≤301≤B≤30
in the initial configuration, it is possible to reach any age from any other age
in the ideal configuration, each age contains at least two books that do not link to this age
it is always possible to reach the ideal configuration from the initial configuration

Example Input
1
4
1 4 4
2 1 3 3 1
3 1 2 1 4 1 2
3 4 4 3 1 2 3

Example Output
6
3 3
4 3
1 4
4 0
3 4
2 4

Explanation
Note that while the example input does not satisfy the constraints on TT and NN, this input does not appear in the actual test data.
Example case 1:

Initially, there are two linking books located in age 11 that link to age 33. Chef links using one of these books while carrying the other one.
Then, Chef links to age 44 from age 33, still carrying the same book as in the previous step.
In age 44, there are two books that link to age 44 itself. Chef links to age 11, carrying one of them.
Then, Chef returns to age 44 using the book he just carried, without carrying another book.
Finally, Chef takes the other book in age 44 that links to age 44, carries it to age 33 and then to age 22.

Scoring
The score for each test case is L/NL/N, where LL is the number of links in your solution. The score for each test file is the average of scores for the individual test cases. The score of a submission is the sum of scores for all test files.
For the only test case in the example output, the score would be 6/4=1.56/4=1.5.
Test Generation Process
There are twenty test files. During the contest, the displayed score will account for exactly four test files, i.e. your score reflects your submission's performance on 20% (4/20) of the test files. However, if your program gets a non-AC verdict on any test file, your submission's verdict will be non-AC. In other words, an AC verdict denotes that your program runs successfully on all the test files. After the end of the contest, your score will be changed to include the sum of your program's scores over the other sixteen test files also.
In each test file, 5 test cases are generated independently. In each of these test cases, NN is chosen uniformly randomly between 3030 and 100100 (inclusive). Then, a real number PP is chosen uniformly randomly between 22 and 55. Next, all BB-s are generated. Each of them is selected independently from a geometric distribution on the range [1,30][1,30] with mean PP. As long as the sum of all BB-s is less than 2N2N, the generation of BB-s is restarted with the same value of PP. Next, the initial configuration is generated uniformly randomly among all configurations satisfying the constraints. Finally, the ideal configuration is generated uniformly randomly among all configurations satisfying the constraints.



Author:
david_adm


Tags:

               
                 david_adm
                 
               
             
             



                        Difficulty Rating:
                    

3715


Date Added:
17-07-2018


Time Limit:
5 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

