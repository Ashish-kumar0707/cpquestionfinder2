
Read problems statements Mandarin , Bengali , Hindi , Russian and Vietnamese as well.
You are given a 1×1×21×1×2 bar (a cuboid) and a grid AA with NN rows (numbered 11 through NN) and MM columns (numbered 11 through MM). Let's denote the cell in row rr and column cc by (r,c)(r,c). Some cells of the grid are blocked, the remaining cells are free.
Each cell has dimensions 1×11×1, the same as two opposite faces of the cuboid. When the bar is placed on the grid in such a way that one of its two 1×11×1 faces fully covers a cell (r,c)(r,c), we say that the bar is standing on the cell (r,c)(r,c). Initially, the bar is standing on a cell (x,y)(x,y).
When the bar is placed on the grid, one of its faces is touching the grid; this face is called the base. In one move, you must roll the bar over one of its base edges (sides of the base); this base edge does not move and the bar is rotated 90∘90∘ around it in such a way that it is still lying on the grid, but with a different base. In different moves, the bar may be rotated around different edges in different directions. After each move, the base of the bar must lie fully inside the grid and it must not cover any blocked cells.
An example sequence of moves is shown here.
For each cell of the grid, determine the minimum number of moves necessary to achieve the state where the bar is standing on this cell or determine that it is impossible to achieve.
Input

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains two space-separated integers NN and MM.
The second line contains two space-separated integers xx and yy.
NN lines follow. For each ii (1≤i≤N1≤i≤N), the ii-th of these lines contains MM integers Ai,1,Ai,2,…,Ai,MAi,1,Ai,2,…,Ai,M (a string with length MM). For each valid i,ji,j, Ai,j=0Ai,j=0 denotes that the cell (i,j)(i,j) is blocked and Ai,j=1Ai,j=1 denotes that it is free.

Output
For each test case, print NN lines, each containing MM space-separated integers. For each valid i,ji,j, the jj-th integer on the ii-th of these lines should denote the minimum number of moves necessary to have the bar stand on cell (i,j)(i,j), or it should be −1−1 if it is impossible.
Constraints

1≤T≤501≤T≤50
1≤N,M≤1,0001≤N,M≤1,000
1≤x≤N1≤x≤N
1≤y≤M1≤y≤M
0≤Ai,j≤10≤Ai,j≤1 for each valid i,ji,j
Ax,y=1Ax,y=1
the sum of N⋅MN⋅M over all test cases does not exceed 106106

Subtasks
Subtask #1 (15 points):

x=1x=1
y=1y=1
Ai,j=1Ai,j=1 for each valid i,ji,j

Subtask #2 (85 points): original constraints

                        Sample Input 1
                        





2
2 4
1 1
1111
0111
2 4
1 1
1111
0011



                        Sample Output 1
                        





0 -1 -1 2
-1 -1 -1 3
0 -1 -1 2
-1 -1 -1 -1


Explanation
Example case 1: Initially, the base of the bar occupies the cell (1,1)(1,1). After the first move, it occupies the cells (1,2)(1,2) and (1,3)(1,3). After the second move, it can occupy the cell (1,4)(1,4).
Alternatively, after the second move, it can occupy the cells (2,2)(2,2) and (2,3)(2,3), and after the third move, it can occupy the cell (2,4)(2,4).



Author:
6★deva2802


Editorial:
https://discuss.codechef.com/problems/ROLLBAR


Tags:

               
                 BFS
                 
                     
                     Algorithms, Graph Algos, Traversals
                 
               
             
             



                        Difficulty Rating:
                    

2579


Date Added:
21-02-2019


Time Limit:
2 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

